{"ast":null,"code":"\"use strict\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"id\",\"initialRouteName\",\"defaultStatus\",\"backBehavior\",\"children\",\"layout\",\"screenListeners\",\"screenOptions\",\"screenLayout\",\"UNSTABLE_getStateForRouteNamesChange\"];import{createNavigatorFactory,DrawerRouter,useNavigationBuilder}from'@react-navigation/native';import{DrawerView}from\"../views/DrawerView.js\";import{jsx as _jsx}from\"react/jsx-runtime\";function DrawerNavigator(_ref){let{id,initialRouteName,defaultStatus='closed',backBehavior,children,layout,screenListeners,screenOptions,screenLayout,UNSTABLE_getStateForRouteNamesChange}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);const{state,descriptors,navigation,NavigationContent}=useNavigationBuilder(DrawerRouter,{id,initialRouteName,defaultStatus,backBehavior,children,layout,screenListeners,screenOptions,screenLayout,UNSTABLE_getStateForRouteNamesChange});return _jsx(NavigationContent,{children:_jsx(DrawerView,Object.assign({},rest,{defaultStatus:defaultStatus,state:state,descriptors:descriptors,navigation:navigation}))});}export function createDrawerNavigator(config){return createNavigatorFactory(DrawerNavigator)(config);}","map":{"version":3,"names":["createNavigatorFactory","DrawerRouter","useNavigationBuilder","DrawerView","jsx","_jsx","DrawerNavigator","_ref","id","initialRouteName","defaultStatus","backBehavior","children","layout","screenListeners","screenOptions","screenLayout","UNSTABLE_getStateForRouteNamesChange","rest","_objectWithoutPropertiesLoose","_excluded","state","descriptors","navigation","NavigationContent","Object","assign","createDrawerNavigator","config"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/@react-navigation/drawer/src/navigators/createDrawerNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  type DrawerActionHelpers,\n  type DrawerNavigationState,\n  DrawerRouter,\n  type DrawerRouterOptions,\n  type NavigatorTypeBagBase,\n  type ParamListBase,\n  type StaticConfig,\n  type TypedNavigator,\n  useNavigationBuilder,\n} from '@react-navigation/native';\n\nimport type {\n  DrawerNavigationEventMap,\n  DrawerNavigationOptions,\n  DrawerNavigationProp,\n  DrawerNavigatorProps,\n} from '../types';\nimport { DrawerView } from '../views/DrawerView';\n\nfunction DrawerNavigator({\n  id,\n  initialRouteName,\n  defaultStatus = 'closed',\n  backBehavior,\n  children,\n  layout,\n  screenListeners,\n  screenOptions,\n  screenLayout,\n  UNSTABLE_getStateForRouteNamesChange,\n  ...rest\n}: DrawerNavigatorProps) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      DrawerNavigationState<ParamListBase>,\n      DrawerRouterOptions,\n      DrawerActionHelpers<ParamListBase>,\n      DrawerNavigationOptions,\n      DrawerNavigationEventMap\n    >(DrawerRouter, {\n      id,\n      initialRouteName,\n      defaultStatus,\n      backBehavior,\n      children,\n      layout,\n      screenListeners,\n      screenOptions,\n      screenLayout,\n      UNSTABLE_getStateForRouteNamesChange,\n    });\n\n  return (\n    <NavigationContent>\n      <DrawerView\n        {...rest}\n        defaultStatus={defaultStatus}\n        state={state}\n        descriptors={descriptors}\n        navigation={navigation}\n      />\n    </NavigationContent>\n  );\n}\n\nexport function createDrawerNavigator<\n  const ParamList extends ParamListBase,\n  const NavigatorID extends string | undefined = undefined,\n  const TypeBag extends NavigatorTypeBagBase = {\n    ParamList: ParamList;\n    NavigatorID: NavigatorID;\n    State: DrawerNavigationState<ParamList>;\n    ScreenOptions: DrawerNavigationOptions;\n    EventMap: DrawerNavigationEventMap;\n    NavigationList: {\n      [RouteName in keyof ParamList]: DrawerNavigationProp<\n        ParamList,\n        RouteName,\n        NavigatorID\n      >;\n    };\n    Navigator: typeof DrawerNavigator;\n  },\n  const Config extends StaticConfig<TypeBag> = StaticConfig<TypeBag>,\n>(config?: Config): TypedNavigator<TypeBag, Config> {\n  return createNavigatorFactory(DrawerNavigator)(config);\n}\n"],"mappings":"iSAAA,OACEA,sBAAsB,CAGtBC,YAAY,CAMZC,oBAAoB,KACf,0BAA0B,CAQjC,OAASC,UAAU,KAAQ,wBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,QAAS,CAAAC,eAAeA,CAAAC,IAAA,CAYC,IAZA,CACvBC,EAAE,CACFC,gBAAgB,CAChBC,aAAa,CAAG,QAAQ,CACxBC,YAAY,CACZC,QAAQ,CACRC,MAAM,CACNC,eAAe,CACfC,aAAa,CACbC,YAAY,CACZC,oCAEoB,CAAC,CAAAV,IAAA,CADlBW,IAAA,CAAAC,6BAAA,CAAAZ,IAAA,CAAAa,SAAA,EAEH,KAAM,CAAEC,KAAK,CAAEC,WAAW,CAAEC,UAAU,CAAEC,iBAAkB,CAAC,CACzDtB,oBAAoB,CAMlBD,YAAY,CAAE,CACdO,EAAE,CACFC,gBAAgB,CAChBC,aAAa,CACbC,YAAY,CACZC,QAAQ,CACRC,MAAM,CACNC,eAAe,CACfC,aAAa,CACbC,YAAY,CACZC,oCACF,CAAC,CAAC,CAEJ,MACE,CAAAZ,IAAA,CAACmB,iBAAiB,EAAAZ,QAAA,CAChBP,IAAA,CAACF,UAAU,CAAAsB,MAAA,CAAAC,MAAA,IACLR,IAAI,EACRR,aAAa,CAAEA,aAAc,CAC7BW,KAAK,CAAEA,KAAM,CACbC,WAAW,CAAEA,WAAY,CACzBC,UAAU,CAAEA,UAAA,EACb,CAAC,CACe,CAAC,CAExB,CAEA,MAAO,SAAS,CAAAI,qBAAqBA,CAmBnCC,MAAe,CAAmC,CAClD,MAAO,CAAA5B,sBAAsB,CAACM,eAAe,CAAC,CAACsB,MAAM,CAAC,CACxD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}