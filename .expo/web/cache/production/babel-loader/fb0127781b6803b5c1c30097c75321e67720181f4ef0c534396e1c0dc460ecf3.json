{"ast":null,"code":"import{UnavailabilityError,Platform}from'expo-modules-core';import BadgeModule from'./BadgeModule';export default async function setBadgeCountAsync(badgeCount,options){if(!BadgeModule.setBadgeCountAsync){throw new UnavailabilityError('ExpoNotifications','setBadgeCountAsync');}return await BadgeModule.setBadgeCountAsync(badgeCount,options?.[\"web\"]);}","map":{"version":3,"names":["UnavailabilityError","Platform","BadgeModule","setBadgeCountAsync","badgeCount","options"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/expo-notifications/src/setBadgeCountAsync.ts"],"sourcesContent":["import { UnavailabilityError, Platform } from 'expo-modules-core';\n\nimport BadgeModule from './BadgeModule';\nimport { WebSetBadgeCountOptions } from './BadgeModule.types';\n\nexport interface SetBadgeCountOptions {\n  /**\n   * A configuration object described [in the `badgin` documentation](https://github.com/jaulz/badgin#options).\n   */\n  web?: WebSetBadgeCountOptions;\n}\n\n/**\n * Sets the badge of the app's icon to the specified number. Setting it to `0` clears the badge. On iOS, this method requires that you have requested\n * the user's permission for `allowBadge` via [`requestPermissionsAsync`](#requestpermissionsasyncpermissions),\n * otherwise it will automatically return `false`.\n * > **Note:** Not all Android launchers support application badges. If the launcher does not support icon badges, the method will resolve to `false`.\n * @param badgeCount The count which should appear on the badge. A value of `0` will clear the badge.\n * @param options An object of options configuring behavior applied.\n * @return It returns a Promise resolving to a boolean representing whether the setting of the badge succeeded.\n * @header badge\n */\nexport default async function setBadgeCountAsync(\n  badgeCount: number,\n  options?: SetBadgeCountOptions\n): Promise<boolean> {\n  if (!BadgeModule.setBadgeCountAsync) {\n    throw new UnavailabilityError('ExpoNotifications', 'setBadgeCountAsync');\n  }\n\n  return await BadgeModule.setBadgeCountAsync(badgeCount, options?.[Platform.OS]);\n}\n"],"mappings":"AAAA,OAASA,mBAAmB,CAAEC,QAAQ,KAAQ,mBAAmB,CAEjE,MAAO,CAAAC,WAAW,KAAM,eAAe,CAoBvC,cAAe,eAAe,CAAAC,kBAAkBA,CAC9CC,UAAkB,CAClBC,OAA8B,EAE9B,GAAI,CAACH,WAAW,CAACC,kBAAkB,CAAE,CACnC,KAAM,IAAI,CAAAH,mBAAmB,CAAC,mBAAmB,CAAE,oBAAoB,CAAC,C,CAG1E,MAAO,MAAM,CAAAE,WAAW,CAACC,kBAAkB,CAACC,UAAU,CAAEC,OAAO,SAAe,CAAC,CACjF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}