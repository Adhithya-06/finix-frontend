{"ast":null,"code":"import{UnavailabilityError,uuid}from'expo-modules-core';import NotificationPresenter from'./NotificationPresenterModule';let warningMessageShown=false;export default async function presentNotificationAsync(content,identifier=uuid.v4()){if(false&&!warningMessageShown){console.warn('`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.');warningMessageShown=true;}if(!NotificationPresenter.presentNotificationAsync){throw new UnavailabilityError('Notifications','presentNotificationAsync');}return await NotificationPresenter.presentNotificationAsync(identifier,content);}","map":{"version":3,"names":["UnavailabilityError","uuid","NotificationPresenter","warningMessageShown","presentNotificationAsync","content","identifier","v4","console","warn"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/expo-notifications/src/presentNotificationAsync.ts"],"sourcesContent":["import { UnavailabilityError, uuid } from 'expo-modules-core';\n\nimport NotificationPresenter from './NotificationPresenterModule';\nimport { NotificationContentInput } from './Notifications.types';\n\nlet warningMessageShown = false;\n\n/**\n * Schedules a notification for immediate trigger.\n * @param content An object representing the notification content.\n * @param identifier\n * @return It returns a Promise resolving with the notification's identifier once the notification is successfully scheduled for immediate display.\n * @header schedule\n * @deprecated This method has been deprecated in favor of using an explicit `NotificationHandler` and the [`scheduleNotificationAsync`](#schedulenotificationasyncrequest) method.\n * More information can be found in our [FYI document](https://expo.fyi/presenting-notifications-deprecated).\n */\nexport default async function presentNotificationAsync(\n  content: NotificationContentInput,\n  identifier: string = uuid.v4()\n): Promise<string> {\n  if (__DEV__ && !warningMessageShown) {\n    console.warn(\n      '`presentNotificationAsync` has been deprecated in favor of using `scheduleNotificationAsync` + an explicit notification handler. Read more at https://expo.fyi/presenting-notifications-deprecated.'\n    );\n    warningMessageShown = true;\n  }\n\n  if (!NotificationPresenter.presentNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'presentNotificationAsync');\n  }\n\n  return await NotificationPresenter.presentNotificationAsync(identifier, content);\n}\n"],"mappings":"AAAA,OAASA,mBAAmB,CAAEC,IAAI,KAAQ,mBAAmB,CAE7D,MAAO,CAAAC,qBAAqB,KAAM,+BAA+B,CAGjE,GAAI,CAAAC,mBAAmB,CAAG,KAAK,CAW/B,cAAe,eAAe,CAAAC,wBAAwBA,CACpDC,OAAiC,CACjCC,UAAA,CAAqBL,IAAI,CAACM,EAAE,EAAE,EAE9B,GAAI,OAAW,CAACJ,mBAAmB,CAAE,CACnCK,OAAO,CAACC,IAAI,CACV,qMAAqM,CACtM,CACDN,mBAAmB,CAAG,IAAI,C,CAG5B,GAAI,CAACD,qBAAqB,CAACE,wBAAwB,CAAE,CACnD,KAAM,IAAI,CAAAJ,mBAAmB,CAAC,eAAe,CAAE,0BAA0B,CAAC,C,CAG5E,MAAO,MAAM,CAAAE,qBAAqB,CAACE,wBAAwB,CAACE,UAAU,CAAED,OAAO,CAAC,CAClF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}