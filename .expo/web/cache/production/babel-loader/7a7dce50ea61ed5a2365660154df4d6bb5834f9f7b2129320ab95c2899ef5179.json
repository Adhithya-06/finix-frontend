{"ast":null,"code":"import React,{createContext,useState,useEffect}from\"react\";import AsyncStorage from\"@react-native-async-storage/async-storage\";import{jsx as _jsx}from\"react/jsx-runtime\";export const TransactionContext=createContext();export const TransactionProvider=({children})=>{const[transactions,setTransactions]=useState([]);useEffect(()=>{const loadTransactions=async()=>{try{const storedTransactions=await AsyncStorage.getItem(\"transactions\");if(storedTransactions){setTransactions(JSON.parse(storedTransactions));}}catch(error){console.error(\"Error loading transactions:\",error);}};loadTransactions();},[]);useEffect(()=>{const saveTransactions=async()=>{try{await AsyncStorage.setItem(\"transactions\",JSON.stringify(transactions));}catch(error){console.error(\"Error saving transactions:\",error);}};saveTransactions();},[transactions]);const addTransaction=newTransaction=>{setTransactions(prevTransactions=>[...prevTransactions,newTransaction]);};return _jsx(TransactionContext.Provider,{value:{transactions,addTransaction},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","AsyncStorage","jsx","_jsx","TransactionContext","TransactionProvider","children","transactions","setTransactions","loadTransactions","storedTransactions","getItem","JSON","parse","error","console","saveTransactions","setItem","stringify","addTransaction","newTransaction","prevTransactions","Provider","value"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/context/TransactionContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const TransactionContext = createContext();\n\nexport const TransactionProvider = ({ children }) => {\n  const [transactions, setTransactions] = useState([]);\n\n  //  Load Transactions from AsyncStorage (persistent storage)\n  useEffect(() => {\n    const loadTransactions = async () => {\n      try {\n        const storedTransactions = await AsyncStorage.getItem(\"transactions\");\n        if (storedTransactions) {\n          setTransactions(JSON.parse(storedTransactions));\n        }\n      } catch (error) {\n        console.error(\"Error loading transactions:\", error);\n      }\n    };\n    loadTransactions();\n  }, []);\n\n  //  Save Transactions to AsyncStorage whenever they change\n  useEffect(() => {\n    const saveTransactions = async () => {\n      try {\n        await AsyncStorage.setItem(\"transactions\", JSON.stringify(transactions));\n      } catch (error) {\n        console.error(\"Error saving transactions:\", error);\n      }\n    };\n    saveTransactions();\n  }, [transactions]);\n\n  // Function to add a new transaction\n  const addTransaction = (newTransaction) => {\n    setTransactions((prevTransactions) => [...prevTransactions, newTransaction]);\n  };\n\n  return (\n    <TransactionContext.Provider value={{ transactions, addTransaction }}>\n      {children}\n    </TransactionContext.Provider>\n  );\n};\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,MAAO,CAAAC,YAAY,KAAM,2CAA2C,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErE,MAAO,MAAM,CAAAC,kBAAkB,CAAGN,aAAa,CAAC,CAAC,CAEjD,MAAO,MAAM,CAAAO,mBAAmB,CAAGA,CAAC,CAAEC,QAAS,CAAC,GAAK,CACnD,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAGpDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,kBAAkB,CAAG,KAAM,CAAAT,YAAY,CAACU,OAAO,CAAC,cAAc,CAAC,CACrE,GAAID,kBAAkB,CAAE,CACtBF,eAAe,CAACI,IAAI,CAACC,KAAK,CAACH,kBAAkB,CAAC,CAAC,CACjD,CACF,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACrD,CACF,CAAC,CACDL,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAGNT,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAf,YAAY,CAACgB,OAAO,CAAC,cAAc,CAAEL,IAAI,CAACM,SAAS,CAACX,YAAY,CAAC,CAAC,CAC1E,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACpD,CACF,CAAC,CACDE,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,CAACT,YAAY,CAAC,CAAC,CAGlB,KAAM,CAAAY,cAAc,CAAIC,cAAc,EAAK,CACzCZ,eAAe,CAAEa,gBAAgB,EAAK,CAAC,GAAGA,gBAAgB,CAAED,cAAc,CAAC,CAAC,CAC9E,CAAC,CAED,MACE,CAAAjB,IAAA,CAACC,kBAAkB,CAACkB,QAAQ,EAACC,KAAK,CAAE,CAAEhB,YAAY,CAAEY,cAAe,CAAE,CAAAb,QAAA,CAClEA,QAAQ,CACkB,CAAC,CAElC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}