{"ast":null,"code":"import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Alert from\"react-native-web/dist/exports/Alert\";import{auth}from'../firebaseConfig';import{createUserWithEmailAndPassword,signInWithEmailAndPassword,sendPasswordResetEmail}from'firebase/auth';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AuthScreen=({navigation})=>{const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[isLogin,setIsLogin]=useState(true);const handleAuth=()=>{if(!email||!password){Alert.alert('Error','Please enter both email and password');return;}if(isLogin){signInWithEmailAndPassword(auth,email,password).then(()=>{Alert.alert('Success','Logged in successfully!');}).catch(error=>Alert.alert('Login Failed',error.message));}else{createUserWithEmailAndPassword(auth,email,password).then(()=>{Alert.alert('Success','Account created successfully!');}).catch(error=>Alert.alert('Signup Failed',error.message));}};const handleForgotPassword=()=>{if(!email){Alert.alert('Error','Please enter your email to reset password.');return;}sendPasswordResetEmail(auth,email).then(()=>{Alert.alert('Success','Password reset email sent! Check your inbox.');}).catch(error=>Alert.alert('Error',error.message));};return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.title,children:isLogin?'Login':'Sign Up'}),_jsx(TextInput,{style:styles.input,placeholder:\"Email\",value:email,onChangeText:setEmail,keyboardType:\"email-address\",autoCapitalize:\"none\"}),_jsx(TextInput,{style:styles.input,placeholder:\"Password\",value:password,onChangeText:setPassword,secureTextEntry:true}),isLogin&&_jsx(TouchableOpacity,{onPress:handleForgotPassword,children:_jsx(Text,{style:styles.forgotPasswordText,children:\"Forgot Password?\"})}),_jsx(TouchableOpacity,{style:styles.button,onPress:handleAuth,children:_jsx(Text,{style:styles.buttonText,children:isLogin?'Login':'Sign Up'})}),_jsx(TouchableOpacity,{onPress:()=>setIsLogin(!isLogin),children:_jsx(Text,{style:styles.switchText,children:isLogin?\"Don't have an account? Sign Up\":\"Already have an account? Login\"})})]});};const styles=StyleSheet.create({container:{flex:1,justifyContent:'center',alignItems:'center',padding:20,backgroundColor:'#fff'},title:{fontSize:28,fontWeight:'bold',marginBottom:20,color:'#8E241F'},input:{width:'100%',height:50,borderWidth:1,borderColor:'#ccc',borderRadius:5,padding:10,marginBottom:10},forgotPasswordText:{alignSelf:'flex-end',color:'#8E241F',fontWeight:'bold',marginBottom:10},button:{backgroundColor:'#8E241F',padding:15,borderRadius:5,width:'100%',alignItems:'center',marginVertical:10},buttonText:{color:'white',fontSize:16,fontWeight:'bold'},switchText:{color:'#8E241F',fontWeight:'bold',marginTop:10}});export default AuthScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","jsx","_jsx","jsxs","_jsxs","AuthScreen","navigation","email","setEmail","password","setPassword","isLogin","setIsLogin","handleAuth","alert","then","catch","error","message","handleForgotPassword","style","styles","container","children","title","input","placeholder","value","onChangeText","keyboardType","autoCapitalize","secureTextEntry","onPress","forgotPasswordText","button","buttonText","switchText","create","flex","justifyContent","alignItems","padding","backgroundColor","fontSize","fontWeight","marginBottom","color","width","height","borderWidth","borderColor","borderRadius","alignSelf","marginVertical","marginTop"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/screens/AuthScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert } from 'react-native';\nimport { auth } from '../firebaseConfig';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail } from 'firebase/auth';\n\nconst AuthScreen = ({ navigation }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [isLogin, setIsLogin] = useState(true);\n\n    // **Handle Login & Signup**\n    const handleAuth = () => {\n        if (!email || !password) {\n            Alert.alert('Error', 'Please enter both email and password');\n            return;\n        }\n\n        if (isLogin) {\n            // **Login User**\n            signInWithEmailAndPassword(auth, email, password)\n                .then(() => {\n                    Alert.alert('Success', 'Logged in successfully!');\n                })\n                .catch(error => Alert.alert('Login Failed', error.message));\n        } else {\n            // **Signup User**\n            createUserWithEmailAndPassword(auth, email, password)\n                .then(() => {\n                    Alert.alert('Success', 'Account created successfully!');\n                })\n                .catch(error => Alert.alert('Signup Failed', error.message));\n        }\n    };\n\n    //  **Handle Forgot Password**\n    const handleForgotPassword = () => {\n        if (!email) {\n            Alert.alert('Error', 'Please enter your email to reset password.');\n            return;\n        }\n\n        sendPasswordResetEmail(auth, email)\n            .then(() => {\n                Alert.alert('Success', 'Password reset email sent! Check your inbox.');\n            })\n            .catch(error => Alert.alert('Error', error.message));\n    };\n\n    return (\n        <View style={styles.container}>\n            <Text style={styles.title}>{isLogin ? 'Login' : 'Sign Up'}</Text>\n            \n            <TextInput\n                style={styles.input}\n                placeholder=\"Email\"\n                value={email}\n                onChangeText={setEmail}\n                keyboardType=\"email-address\"\n                autoCapitalize=\"none\"\n            />\n            \n            <TextInput\n                style={styles.input}\n                placeholder=\"Password\"\n                value={password}\n                onChangeText={setPassword}\n                secureTextEntry\n            />\n\n            {/* Forgot Password Button */}\n            {isLogin && (\n                <TouchableOpacity onPress={handleForgotPassword}>\n                    <Text style={styles.forgotPasswordText}>Forgot Password?</Text>\n                </TouchableOpacity>\n            )}\n\n            <TouchableOpacity style={styles.button} onPress={handleAuth}>\n                <Text style={styles.buttonText}>{isLogin ? 'Login' : 'Sign Up'}</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity onPress={() => setIsLogin(!isLogin)}>\n                <Text style={styles.switchText}>\n                    {isLogin ? \"Don't have an account? Sign Up\" : \"Already have an account? Login\"}\n                </Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\n// **Styles**\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 20,\n        backgroundColor: '#fff',\n    },\n    title: {\n        fontSize: 28,\n        fontWeight: 'bold',\n        marginBottom: 20,\n        color: '#8E241F',\n    },\n    input: {\n        width: '100%',\n        height: 50,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    },\n    forgotPasswordText: {\n        alignSelf: 'flex-end',\n        color: '#8E241F',\n        fontWeight: 'bold',\n        marginBottom: 10,\n    },\n    button: {\n        backgroundColor: '#8E241F',\n        padding: 15,\n        borderRadius: 5,\n        width: '100%',\n        alignItems: 'center',\n        marginVertical: 10,\n    },\n    buttonText: {\n        color: 'white',\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n    switchText: {\n        color: '#8E241F',\n        fontWeight: 'bold',\n        marginTop: 10,\n    },\n});\n\nexport default AuthScreen;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}