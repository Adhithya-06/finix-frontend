{"ast":null,"code":"\"use strict\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"href\",\"icon\",\"label\",\"labelStyle\",\"focused\",\"allowFontScaling\",\"activeTintColor\",\"inactiveTintColor\",\"activeBackgroundColor\",\"inactiveBackgroundColor\",\"style\",\"onPress\",\"pressColor\",\"pressOpacity\",\"testID\",\"accessibilityLabel\"];import{PlatformPressable,Text}from'@react-navigation/elements';import{useTheme}from'@react-navigation/native';import Color from'color';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function DrawerItem(props){const{colors,fonts}=useTheme();const{href,icon,label,labelStyle,focused=false,allowFontScaling,activeTintColor=colors.primary,inactiveTintColor=Color(colors.text).alpha(0.68).rgb().string(),activeBackgroundColor=Color(activeTintColor).alpha(0.12).rgb().string(),inactiveBackgroundColor='transparent',style,onPress,pressColor,pressOpacity=1,testID,accessibilityLabel}=props,rest=_objectWithoutPropertiesLoose(props,_excluded);const{borderRadius=56}=StyleSheet.flatten(style||{});const color=focused?activeTintColor:inactiveTintColor;const backgroundColor=focused?activeBackgroundColor:inactiveBackgroundColor;const iconNode=icon?icon({size:24,focused,color}):null;return _jsx(View,Object.assign({collapsable:false},rest,{style:[styles.container,{borderRadius,backgroundColor},style],children:_jsx(PlatformPressable,{testID:testID,onPress:onPress,accessibilityLabel:accessibilityLabel,accessibilityRole:\"button\",accessibilityState:{selected:focused},pressColor:pressColor,pressOpacity:pressOpacity,hoverEffect:{color},href:href,children:_jsxs(View,{style:[styles.wrapper,{borderRadius}],children:[iconNode,_jsx(View,{style:[styles.label,{marginStart:iconNode?12:0}],children:typeof label==='string'?_jsx(Text,{numberOfLines:1,allowFontScaling:allowFontScaling,style:[styles.labelText,{color},fonts.medium,labelStyle],children:label}):label({color,focused})})]})})}));}const styles=StyleSheet.create({container:{overflow:'hidden'},wrapper:{flexDirection:'row',alignItems:'center',paddingVertical:11,paddingStart:16,paddingEnd:24},label:{marginEnd:12,marginVertical:4,flex:1},labelText:{lineHeight:24,textAlignVertical:'center'}});","map":{"version":3,"names":["PlatformPressable","Text","useTheme","Color","React","StyleSheet","View","jsx","_jsx","jsxs","_jsxs","DrawerItem","props","colors","fonts","href","icon","label","labelStyle","focused","allowFontScaling","activeTintColor","primary","inactiveTintColor","text","alpha","rgb","string","activeBackgroundColor","inactiveBackgroundColor","style","onPress","pressColor","pressOpacity","testID","accessibilityLabel","rest","_objectWithoutPropertiesLoose","_excluded","borderRadius","flatten","color","backgroundColor","iconNode","size","Object","assign","collapsable","styles","container","children","accessibilityRole","accessibilityState","selected","hoverEffect","wrapper","marginStart","numberOfLines","labelText","medium","create","overflow","flexDirection","alignItems","paddingVertical","paddingStart","paddingEnd","marginEnd","marginVertical","flex","lineHeight","textAlignVertical"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/@react-navigation/drawer/src/views/DrawerItem.tsx"],"sourcesContent":["import { PlatformPressable, Text } from '@react-navigation/elements';\nimport { type Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport {\n  type StyleProp,\n  StyleSheet,\n  type TextStyle,\n  View,\n  type ViewStyle,\n} from 'react-native';\n\ntype Props = {\n  /**\n   * The route object which should be specified by the drawer item.\n   */\n  route?: Route<string>;\n  /**\n   * The `href` to use for the anchor tag on web\n   */\n  href?: string;\n  /**\n   * The label text of the item.\n   */\n  label:\n    | string\n    | ((props: { focused: boolean; color: string }) => React.ReactNode);\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  focused?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress: () => void;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Color of the touchable effect on press.\n   * Only supported on Android.\n   *\n   * @platform android\n   */\n  pressColor?: string;\n  /**\n   * Opacity of the touchable effect on press.\n   * Only supported on iOS.\n   *\n   * @platform ios\n   */\n  pressOpacity?: number;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Whether label font should scale to respect Text Size accessibility settings.\n   */\n  allowFontScaling?: boolean;\n\n  /**\n   * Accessibility label for drawer item.\n   */\n  accessibilityLabel?: string;\n  /**\n   * ID to locate this drawer item in tests.\n   */\n  testID?: string;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n */\nexport function DrawerItem(props: Props) {\n  const { colors, fonts } = useTheme();\n\n  const {\n    href,\n    icon,\n    label,\n    labelStyle,\n    focused = false,\n    allowFontScaling,\n    // eslint-disable-next-line @eslint-react/no-unstable-default-props\n    activeTintColor = colors.primary,\n    // eslint-disable-next-line @eslint-react/no-unstable-default-props\n    inactiveTintColor = Color(colors.text).alpha(0.68).rgb().string(),\n    // eslint-disable-next-line @eslint-react/no-unstable-default-props\n    activeBackgroundColor = Color(activeTintColor).alpha(0.12).rgb().string(),\n    inactiveBackgroundColor = 'transparent',\n    style,\n    onPress,\n    pressColor,\n    pressOpacity = 1,\n    testID,\n    accessibilityLabel,\n    ...rest\n  } = props;\n\n  const { borderRadius = 56 } = StyleSheet.flatten(style || {});\n  const color = focused ? activeTintColor : inactiveTintColor;\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  const iconNode = icon ? icon({ size: 24, focused, color }) : null;\n\n  return (\n    <View\n      collapsable={false}\n      {...rest}\n      style={[styles.container, { borderRadius, backgroundColor }, style]}\n    >\n      <PlatformPressable\n        testID={testID}\n        onPress={onPress}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"button\"\n        accessibilityState={{ selected: focused }}\n        pressColor={pressColor}\n        pressOpacity={pressOpacity}\n        hoverEffect={{ color }}\n        href={href}\n      >\n        <View style={[styles.wrapper, { borderRadius }]}>\n          {iconNode}\n          <View style={[styles.label, { marginStart: iconNode ? 12 : 0 }]}>\n            {typeof label === 'string' ? (\n              <Text\n                numberOfLines={1}\n                allowFontScaling={allowFontScaling}\n                style={[styles.labelText, { color }, fonts.medium, labelStyle]}\n              >\n                {label}\n              </Text>\n            ) : (\n              label({ color, focused })\n            )}\n          </View>\n        </View>\n      </PlatformPressable>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 11,\n    paddingStart: 16,\n    paddingEnd: 24,\n  },\n  label: {\n    marginEnd: 12,\n    marginVertical: 4,\n    flex: 1,\n  },\n  labelText: {\n    lineHeight: 24,\n    textAlignVertical: 'center',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}