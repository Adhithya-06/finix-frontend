{"ast":null,"code":"import React from'react';import PanResponder from\"react-native-web/dist/exports/PanResponder\";export function shouldSetPanResponder(_event,gesture){const{dx,dy}=gesture;const offset=2;return Math.abs(dx)>offset||Math.abs(dy)>offset;}export function shouldDismissView(newAnimatedValue,gesture){const dismissThreshold=0.65;const{vy,dy}=gesture;return newAnimatedValue<=dismissThreshold||Math.abs(vy)>=dismissThreshold&&dy<0;}export function usePanResponder({animatedValue,computeNewAnimatedValueForGesture,onDismiss,onRestore,disable}){const onMove=React.useCallback((_event,gesture)=>{if(disable){return;}const newAnimatedValue=computeNewAnimatedValueForGesture(gesture);animatedValue.current?.setValue(newAnimatedValue);},[animatedValue,computeNewAnimatedValueForGesture,disable]);const onRelease=React.useCallback((_event,gesture)=>{if(disable){return;}const newAnimatedValue=computeNewAnimatedValueForGesture(gesture);if(shouldDismissView(newAnimatedValue,gesture)){onDismiss();}else{onRestore();}},[computeNewAnimatedValueForGesture,onDismiss,onRestore,disable]);const panResponder=React.useMemo(()=>PanResponder.create({onMoveShouldSetPanResponder:shouldSetPanResponder,onMoveShouldSetPanResponderCapture:shouldSetPanResponder,onPanResponderMove:onMove,onPanResponderRelease:onRelease}),[onMove,onRelease]);return{panResponder,onMove,onRelease};}","map":{"version":3,"names":["React","PanResponder","shouldSetPanResponder","_event","gesture","dx","dy","offset","Math","abs","shouldDismissView","newAnimatedValue","dismissThreshold","vy","usePanResponder","animatedValue","computeNewAnimatedValueForGesture","onDismiss","onRestore","disable","onMove","useCallback","current","setValue","onRelease","panResponder","useMemo","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderRelease"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/react-native-toast-message/lib/src/hooks/usePanResponder.js"],"sourcesContent":["import React from 'react';\nimport { PanResponder } from 'react-native';\nexport function shouldSetPanResponder(_event, gesture) {\n    const { dx, dy } = gesture;\n    // Fixes onPress handler\n    // https://github.com/calintamas/react-native-toast-message/issues/113\n    const offset = 2;\n    return Math.abs(dx) > offset || Math.abs(dy) > offset;\n}\nexport function shouldDismissView(newAnimatedValue, gesture) {\n    const dismissThreshold = 0.65;\n    const { vy, dy } = gesture;\n    return (newAnimatedValue <= dismissThreshold ||\n        (Math.abs(vy) >= dismissThreshold && dy < 0));\n}\nexport function usePanResponder({ animatedValue, computeNewAnimatedValueForGesture, onDismiss, onRestore, disable }) {\n    const onMove = React.useCallback((_event, gesture) => {\n        if (disable) {\n            return;\n        }\n        const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n        animatedValue.current?.setValue(newAnimatedValue);\n    }, [animatedValue, computeNewAnimatedValueForGesture, disable]);\n    const onRelease = React.useCallback((_event, gesture) => {\n        if (disable) {\n            return;\n        }\n        const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n        if (shouldDismissView(newAnimatedValue, gesture)) {\n            onDismiss();\n        }\n        else {\n            onRestore();\n        }\n    }, [computeNewAnimatedValueForGesture, onDismiss, onRestore, disable]);\n    const panResponder = React.useMemo(() => PanResponder.create({\n        onMoveShouldSetPanResponder: shouldSetPanResponder,\n        onMoveShouldSetPanResponderCapture: shouldSetPanResponder,\n        onPanResponderMove: onMove,\n        onPanResponderRelease: onRelease\n    }), [onMove, onRelease]);\n    return {\n        panResponder,\n        onMove,\n        onRelease\n    };\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,YAAA,kDAE1B,MAAO,SAAS,CAAAC,qBAAqBA,CAACC,MAAM,CAAEC,OAAO,CAAE,CACnD,KAAM,CAAEC,EAAE,CAAEC,EAAG,CAAC,CAAGF,OAAO,CAG1B,KAAM,CAAAG,MAAM,CAAG,CAAC,CAChB,MAAO,CAAAC,IAAI,CAACC,GAAG,CAACJ,EAAE,CAAC,CAAGE,MAAM,EAAIC,IAAI,CAACC,GAAG,CAACH,EAAE,CAAC,CAAGC,MAAM,CACzD,CACA,MAAO,SAAS,CAAAG,iBAAiBA,CAACC,gBAAgB,CAAEP,OAAO,CAAE,CACzD,KAAM,CAAAQ,gBAAgB,CAAG,IAAI,CAC7B,KAAM,CAAEC,EAAE,CAAEP,EAAG,CAAC,CAAGF,OAAO,CAC1B,MAAQ,CAAAO,gBAAgB,EAAIC,gBAAgB,EACvCJ,IAAI,CAACC,GAAG,CAACI,EAAE,CAAC,EAAID,gBAAgB,EAAIN,EAAE,CAAG,CAAE,CACpD,CACA,MAAO,SAAS,CAAAQ,eAAeA,CAAC,CAAEC,aAAa,CAAEC,iCAAiC,CAAEC,SAAS,CAAEC,SAAS,CAAEC,OAAQ,CAAC,CAAE,CACjH,KAAM,CAAAC,MAAM,CAAGpB,KAAK,CAACqB,WAAW,CAAC,CAAClB,MAAM,CAAEC,OAAO,GAAK,CAClD,GAAIe,OAAO,CAAE,CACT,OACJ,CACA,KAAM,CAAAR,gBAAgB,CAAGK,iCAAiC,CAACZ,OAAO,CAAC,CACnEW,aAAa,CAACO,OAAO,EAAEC,QAAQ,CAACZ,gBAAgB,CAAC,CACrD,CAAC,CAAE,CAACI,aAAa,CAAEC,iCAAiC,CAAEG,OAAO,CAAC,CAAC,CAC/D,KAAM,CAAAK,SAAS,CAAGxB,KAAK,CAACqB,WAAW,CAAC,CAAClB,MAAM,CAAEC,OAAO,GAAK,CACrD,GAAIe,OAAO,CAAE,CACT,OACJ,CACA,KAAM,CAAAR,gBAAgB,CAAGK,iCAAiC,CAACZ,OAAO,CAAC,CACnE,GAAIM,iBAAiB,CAACC,gBAAgB,CAAEP,OAAO,CAAC,CAAE,CAC9Ca,SAAS,CAAC,CAAC,CACf,CAAC,IACI,CACDC,SAAS,CAAC,CAAC,CACf,CACJ,CAAC,CAAE,CAACF,iCAAiC,CAAEC,SAAS,CAAEC,SAAS,CAAEC,OAAO,CAAC,CAAC,CACtE,KAAM,CAAAM,YAAY,CAAGzB,KAAK,CAAC0B,OAAO,CAAC,IAAMzB,YAAY,CAAC0B,MAAM,CAAC,CACzDC,2BAA2B,CAAE1B,qBAAqB,CAClD2B,kCAAkC,CAAE3B,qBAAqB,CACzD4B,kBAAkB,CAAEV,MAAM,CAC1BW,qBAAqB,CAAEP,SAC3B,CAAC,CAAC,CAAE,CAACJ,MAAM,CAAEI,SAAS,CAAC,CAAC,CACxB,MAAO,CACHC,YAAY,CACZL,MAAM,CACNI,SACJ,CAAC,CACL","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}