{"ast":null,"code":"\"use strict\";import{CommonActions,DrawerActions,useLinkBuilder}from'@react-navigation/native';import*as React from'react';import{DrawerItem}from\"./DrawerItem.js\";import{jsx as _jsx}from\"react/jsx-runtime\";export function DrawerItemList({state,navigation,descriptors}){const{buildHref}=useLinkBuilder();const focusedRoute=state.routes[state.index];const focusedDescriptor=descriptors[focusedRoute.key];const focusedOptions=focusedDescriptor.options;const{drawerActiveTintColor,drawerInactiveTintColor,drawerActiveBackgroundColor,drawerInactiveBackgroundColor}=focusedOptions;return state.routes.map((route,i)=>{const focused=i===state.index;const onPress=()=>{const event=navigation.emit({type:'drawerItemPress',target:route.key,canPreventDefault:true});if(!event.defaultPrevented){navigation.dispatch(Object.assign({},focused?DrawerActions.closeDrawer():CommonActions.navigate(route),{target:state.key}));}};const{title,drawerLabel,drawerIcon,drawerLabelStyle,drawerItemStyle,drawerAllowFontScaling}=descriptors[route.key].options;return _jsx(DrawerItem,{route:route,href:buildHref(route.name,route.params),label:drawerLabel!==undefined?drawerLabel:title!==undefined?title:route.name,icon:drawerIcon,focused:focused,activeTintColor:drawerActiveTintColor,inactiveTintColor:drawerInactiveTintColor,activeBackgroundColor:drawerActiveBackgroundColor,inactiveBackgroundColor:drawerInactiveBackgroundColor,allowFontScaling:drawerAllowFontScaling,labelStyle:drawerLabelStyle,style:drawerItemStyle,onPress:onPress},route.key);});}","map":{"version":3,"names":["CommonActions","DrawerActions","useLinkBuilder","React","DrawerItem","jsx","_jsx","DrawerItemList","state","navigation","descriptors","buildHref","focusedRoute","routes","index","focusedDescriptor","key","focusedOptions","options","drawerActiveTintColor","drawerInactiveTintColor","drawerActiveBackgroundColor","drawerInactiveBackgroundColor","map","route","i","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","Object","assign","closeDrawer","navigate","title","drawerLabel","drawerIcon","drawerLabelStyle","drawerItemStyle","drawerAllowFontScaling","href","name","params","label","undefined","icon","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","allowFontScaling","labelStyle","style"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/@react-navigation/drawer/src/views/DrawerItemList.tsx"],"sourcesContent":["import {\n  CommonActions,\n  DrawerActions,\n  type DrawerNavigationState,\n  type ParamListBase,\n  useLinkBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type { DrawerDescriptorMap, DrawerNavigationHelpers } from '../types';\nimport { DrawerItem } from './DrawerItem';\n\ntype Props = {\n  state: DrawerNavigationState<ParamListBase>;\n  navigation: DrawerNavigationHelpers;\n  descriptors: DrawerDescriptorMap;\n};\n\n/**\n * Component that renders the navigation list in the drawer.\n */\nexport function DrawerItemList({ state, navigation, descriptors }: Props) {\n  const { buildHref } = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    drawerActiveTintColor,\n    drawerInactiveTintColor,\n    drawerActiveBackgroundColor,\n    drawerInactiveBackgroundColor,\n  } = focusedOptions;\n\n  return state.routes.map((route, i) => {\n    const focused = i === state.index;\n\n    const onPress = () => {\n      const event = navigation.emit({\n        type: 'drawerItemPress',\n        target: route.key,\n        canPreventDefault: true,\n      });\n\n      if (!event.defaultPrevented) {\n        navigation.dispatch({\n          ...(focused\n            ? DrawerActions.closeDrawer()\n            : CommonActions.navigate(route)),\n          target: state.key,\n        });\n      }\n    };\n\n    const {\n      title,\n      drawerLabel,\n      drawerIcon,\n      drawerLabelStyle,\n      drawerItemStyle,\n      drawerAllowFontScaling,\n    } = descriptors[route.key].options;\n\n    return (\n      <DrawerItem\n        key={route.key}\n        route={route}\n        href={buildHref(route.name, route.params)}\n        label={\n          drawerLabel !== undefined\n            ? drawerLabel\n            : title !== undefined\n              ? title\n              : route.name\n        }\n        icon={drawerIcon}\n        focused={focused}\n        activeTintColor={drawerActiveTintColor}\n        inactiveTintColor={drawerInactiveTintColor}\n        activeBackgroundColor={drawerActiveBackgroundColor}\n        inactiveBackgroundColor={drawerInactiveBackgroundColor}\n        allowFontScaling={drawerAllowFontScaling}\n        labelStyle={drawerLabelStyle}\n        style={drawerItemStyle}\n        onPress={onPress}\n      />\n    );\n  }) as React.ReactNode as React.ReactElement;\n}\n"],"mappings":"aAAA,OACEA,aAAa,CACbC,aAAa,CAGbC,cAAc,KACT,0BAA0B,CACjC,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,CAG9B,OAASC,UAAU,KAAQ,iBAAc,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAW1C,MAAO,SAAS,CAAAC,cAAcA,CAAC,CAAEC,KAAK,CAAEC,UAAU,CAAEC,WAAmB,CAAC,CAAE,CACxE,KAAM,CAAEC,SAAU,CAAC,CAAGT,cAAc,CAAC,CAAC,CAEtC,KAAM,CAAAU,YAAY,CAAGJ,KAAK,CAACK,MAAM,CAACL,KAAK,CAACM,KAAK,CAAC,CAC9C,KAAM,CAAAC,iBAAiB,CAAGL,WAAW,CAACE,YAAY,CAACI,GAAG,CAAC,CACvD,KAAM,CAAAC,cAAc,CAAGF,iBAAiB,CAACG,OAAO,CAEhD,KAAM,CACJC,qBAAqB,CACrBC,uBAAuB,CACvBC,2BAA2B,CAC3BC,6BACF,CAAC,CAAGL,cAAc,CAElB,MAAO,CAAAT,KAAK,CAACK,MAAM,CAACU,GAAG,CAAC,CAACC,KAAK,CAAEC,CAAC,GAAK,CACpC,KAAM,CAAAC,OAAO,CAAGD,CAAC,GAAKjB,KAAK,CAACM,KAAK,CAEjC,KAAM,CAAAa,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAAAC,KAAK,CAAGnB,UAAU,CAACoB,IAAI,CAAC,CAC5BC,IAAI,CAAE,iBAAiB,CACvBC,MAAM,CAAEP,KAAK,CAACR,GAAG,CACjBgB,iBAAiB,CAAE,IACrB,CAAC,CAAC,CAEF,GAAI,CAACJ,KAAK,CAACK,gBAAgB,CAAE,CAC3BxB,UAAU,CAACyB,QAAQ,CAAAC,MAAA,CAAAC,MAAA,IACbV,OAAO,CACPzB,aAAa,CAACoC,WAAW,CAAC,CAAC,CAC3BrC,aAAa,CAACsC,QAAQ,CAACd,KAAK,CAAC,EACjCO,MAAM,CAAEvB,KAAK,CAACQ,GAAA,EACf,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CACJuB,KAAK,CACLC,WAAW,CACXC,UAAU,CACVC,gBAAgB,CAChBC,eAAe,CACfC,sBACF,CAAC,CAAGlC,WAAW,CAACc,KAAK,CAACR,GAAG,CAAC,CAACE,OAAO,CAElC,MACE,CAAAZ,IAAA,CAACF,UAAU,EAEToB,KAAK,CAAEA,KAAM,CACbqB,IAAI,CAAElC,SAAS,CAACa,KAAK,CAACsB,IAAI,CAAEtB,KAAK,CAACuB,MAAM,CAAE,CAC1CC,KAAK,CACHR,WAAW,GAAKS,SAAS,CACrBT,WAAW,CACXD,KAAK,GAAKU,SAAS,CACjBV,KAAK,CACLf,KAAK,CAACsB,IACb,CACDI,IAAI,CAAET,UAAW,CACjBf,OAAO,CAAEA,OAAQ,CACjByB,eAAe,CAAEhC,qBAAsB,CACvCiC,iBAAiB,CAAEhC,uBAAwB,CAC3CiC,qBAAqB,CAAEhC,2BAA4B,CACnDiC,uBAAuB,CAAEhC,6BAA8B,CACvDiC,gBAAgB,CAAEX,sBAAuB,CACzCY,UAAU,CAAEd,gBAAiB,CAC7Be,KAAK,CAAEd,eAAgB,CACvBhB,OAAO,CAAEA,OAAQ,EAnBZH,KAAK,CAACR,GAoBZ,CAAC,CAEN,CAAC,CAAC,CACJ","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}