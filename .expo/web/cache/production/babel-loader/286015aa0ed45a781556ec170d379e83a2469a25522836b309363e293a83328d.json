{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Alert from\"react-native-web/dist/exports/Alert\";import FlatList from\"react-native-web/dist/exports/FlatList\";import Switch from\"react-native-web/dist/exports/Switch\";import*as DocumentPicker from\"expo-document-picker\";import*as WebBrowser from\"expo-web-browser\";import AsyncStorage from\"@react-native-async-storage/async-storage\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ExportsSettingsScreen=()=>{const[notificationsEnabled,setNotificationsEnabled]=useState(null);const[importedFiles,setImportedFiles]=useState([]);useEffect(()=>{const loadNotificationSetting=async()=>{try{const savedSetting=await AsyncStorage.getItem(\"notificationsEnabled\");if(savedSetting!==null){setNotificationsEnabled(JSON.parse(savedSetting));}else{setNotificationsEnabled(false);await AsyncStorage.setItem(\"notificationsEnabled\",JSON.stringify(false));}}catch(error){console.error(\"Failed to load notification setting:\",error);setNotificationsEnabled(false);}};loadNotificationSetting();},[]);const toggleNotifications=async()=>{const newValue=!notificationsEnabled;setNotificationsEnabled(newValue);try{await AsyncStorage.setItem(\"notificationsEnabled\",JSON.stringify(newValue));}catch(error){console.error(\"Failed to save notification setting:\",error);}};const handleImportStatement=async()=>{try{const result=await DocumentPicker.getDocumentAsync({type:[\"application/pdf\",\"text/csv\"]});if(result.canceled||!result.assets?.length)return;const uri=result.assets[0].uri;const name=result.assets[0].name;const newFile={uri,name};const updatedFiles=[...importedFiles,newFile];setImportedFiles(updatedFiles);Alert.alert(\"Success\",\"Bank statement imported successfully!\");}catch(error){console.error(\"Error importing statement:\",error);}};const handleOpenFile=async uri=>{try{await WebBrowser.openBrowserAsync(uri);}catch(e){Alert.alert(\"Error\",\"Could not open file.\");}};if(notificationsEnabled===null){return _jsx(View,{style:styles.container,children:_jsx(Text,{style:styles.title,children:\"Loading Settings...\"})});}return _jsxs(View,{style:styles.container,children:[_jsx(Text,{style:styles.title,children:\"\\uD83D\\uDCC1 Import & Settings\"}),_jsx(View,{style:styles.settingContainer,children:_jsxs(View,{style:styles.toggleRow,children:[_jsx(Text,{style:styles.label,children:\"\\uD83D\\uDD14 Enable Notifications\"}),_jsx(Switch,{value:notificationsEnabled,onValueChange:toggleNotifications,trackColor:{false:\"#ccc\",true:\"#2ECC71\"},thumbColor:notificationsEnabled?\"#fff\":\"#888\"})]})}),_jsxs(View,{style:styles.settingContainer,children:[_jsx(Text,{style:styles.label,children:\"\\uD83D\\uDCE5 Import Bank Statement\"}),_jsx(TouchableOpacity,{style:styles.importButton,onPress:handleImportStatement,children:_jsx(Text,{style:styles.importButtonText,children:\"Import Statement\"})}),importedFiles.length>0&&_jsxs(_Fragment,{children:[_jsx(Text,{style:[styles.label,{marginTop:10}],children:\"\\uD83D\\uDCC2 Imported Files:\"}),_jsx(FlatList,{data:importedFiles,keyExtractor:(item,index)=>index.toString(),renderItem:({item})=>_jsx(View,{style:{marginTop:5},children:_jsx(TouchableOpacity,{onPress:()=>handleOpenFile(item.uri),children:_jsx(Text,{style:{color:\"lightgreen\",textDecorationLine:\"underline\"},children:item.name})})})})]})]})]});};const styles=StyleSheet.create({container:{flex:1,padding:20,backgroundColor:\"#8E241F\"},title:{fontSize:22,fontWeight:\"bold\",textAlign:\"center\",marginBottom:20,color:\"white\"},settingContainer:{marginBottom:150,padding:15,backgroundColor:\"#AE1C1A\",borderRadius:10,alignItems:\"center\"},label:{color:\"white\",fontSize:16,fontWeight:\"bold\"},toggleRow:{flexDirection:\"row\",justifyContent:\"space-between\",alignItems:\"center\",width:\"100%\"},importButton:{backgroundColor:\"#2ECC71\",padding:12,borderRadius:5,alignItems:\"center\",marginTop:20},importButtonText:{color:\"white\",fontWeight:\"bold\"}});export default ExportsSettingsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","StyleSheet","Alert","FlatList","Switch","DocumentPicker","WebBrowser","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ExportsSettingsScreen","notificationsEnabled","setNotificationsEnabled","importedFiles","setImportedFiles","loadNotificationSetting","savedSetting","getItem","JSON","parse","setItem","stringify","error","console","toggleNotifications","newValue","handleImportStatement","result","getDocumentAsync","type","canceled","assets","length","uri","name","newFile","updatedFiles","alert","handleOpenFile","openBrowserAsync","e","style","styles","container","children","title","settingContainer","toggleRow","label","value","onValueChange","trackColor","false","true","thumbColor","importButton","onPress","importButtonText","marginTop","data","keyExtractor","item","index","toString","renderItem","color","textDecorationLine","create","flex","padding","backgroundColor","fontSize","fontWeight","textAlign","marginBottom","borderRadius","alignItems","flexDirection","justifyContent","width"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/screens/ExportsSettingsScreen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text, TouchableOpacity, StyleSheet, Alert, FlatList, Switch } from \"react-native\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport * as WebBrowser from \"expo-web-browser\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst ExportsSettingsScreen = () => {\n  const [notificationsEnabled, setNotificationsEnabled] = useState(null); // Start as null\n  const [importedFiles, setImportedFiles] = useState([]);\n\n  // Load saved toggle state from AsyncStorage on mount\n  useEffect(() => {\n    const loadNotificationSetting = async () => {\n      try {\n        const savedSetting = await AsyncStorage.getItem(\"notificationsEnabled\");\n        if (savedSetting !== null) {\n          setNotificationsEnabled(JSON.parse(savedSetting));\n        } else {\n          setNotificationsEnabled(false); // Default if not set\n          await AsyncStorage.setItem(\"notificationsEnabled\", JSON.stringify(false));\n        }\n      } catch (error) {\n        console.error(\"Failed to load notification setting:\", error);\n        setNotificationsEnabled(false); // Fallback\n      }\n    };\n\n    loadNotificationSetting();\n  }, []);\n\n  // Handle toggle switch\n  const toggleNotifications = async () => {\n    const newValue = !notificationsEnabled;\n    setNotificationsEnabled(newValue);\n    try {\n      await AsyncStorage.setItem(\"notificationsEnabled\", JSON.stringify(newValue));\n    } catch (error) {\n      console.error(\"Failed to save notification setting:\", error);\n    }\n  };\n\n  const handleImportStatement = async () => {\n    try {\n      const result = await DocumentPicker.getDocumentAsync({\n        type: [\"application/pdf\", \"text/csv\"],\n      });\n\n      if (result.canceled || !result.assets?.length) return;\n\n      const uri = result.assets[0].uri;\n      const name = result.assets[0].name;\n\n      const newFile = { uri, name };\n      const updatedFiles = [...importedFiles, newFile];\n      setImportedFiles(updatedFiles);\n\n      Alert.alert(\"Success\", \"Bank statement imported successfully!\");\n    } catch (error) {\n      console.error(\"Error importing statement:\", error);\n    }\n  };\n\n  const handleOpenFile = async (uri) => {\n    try {\n      await WebBrowser.openBrowserAsync(uri);\n    } catch (e) {\n      Alert.alert(\"Error\", \"Could not open file.\");\n    }\n  };\n\n  // Show loading message until toggle state is loaded\n  if (notificationsEnabled === null) {\n    return (\n      <View style={styles.container}>\n        <Text style={styles.title}>Loading Settings...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>📁 Import & Settings</Text>\n\n      {/* 🔔 Notification Toggle */}\n      <View style={styles.settingContainer}>\n        <View style={styles.toggleRow}>\n          <Text style={styles.label}>🔔 Enable Notifications</Text>\n          <Switch\n            value={notificationsEnabled}\n            onValueChange={toggleNotifications}\n            trackColor={{ false: \"#ccc\", true: \"#2ECC71\" }}\n            thumbColor={notificationsEnabled ? \"#fff\" : \"#888\"}\n          />\n        </View>\n      </View>\n\n      {/* 📥 Import Bank Statements */}\n      <View style={styles.settingContainer}>\n        <Text style={styles.label}>📥 Import Bank Statement</Text>\n        <TouchableOpacity style={styles.importButton} onPress={handleImportStatement}>\n          <Text style={styles.importButtonText}>Import Statement</Text>\n        </TouchableOpacity>\n\n        {importedFiles.length > 0 && (\n          <>\n            <Text style={[styles.label, { marginTop: 10 }]}>📂 Imported Files:</Text>\n            <FlatList\n              data={importedFiles}\n              keyExtractor={(item, index) => index.toString()}\n              renderItem={({ item }) => (\n                <View style={{ marginTop: 5 }}>\n                  <TouchableOpacity onPress={() => handleOpenFile(item.uri)}>\n                    <Text style={{ color: \"lightgreen\", textDecorationLine: \"underline\" }}>{item.name}</Text>\n                  </TouchableOpacity>\n                </View>\n              )}\n            />\n          </>\n        )}\n      </View>\n    </View>\n  );\n};\n\n// 🎨 Styles\nconst styles = StyleSheet.create({\n  container: { flex: 1, padding: 20, backgroundColor: \"#8E241F\" },\n  title: { fontSize: 22, fontWeight: \"bold\", textAlign: \"center\", marginBottom: 20, color: \"white\" },\n  settingContainer: {\n    marginBottom: 150,\n    padding: 15,\n    backgroundColor: \"#AE1C1A\",\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n  label: { color: \"white\", fontSize: 16, fontWeight: \"bold\" },\n  toggleRow: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  importButton: {\n    backgroundColor: \"#2ECC71\",\n    padding: 12,\n    borderRadius: 5,\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n  importButtonText: { color: \"white\", fontWeight: \"bold\" },\n});\n\nexport default ExportsSettingsScreen;\n\n\n\n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}