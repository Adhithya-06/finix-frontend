{"ast":null,"code":"import{CodedError,uuid}from'expo-modules-core';const INSTALLATION_ID_KEY='EXPO_NOTIFICATIONS_INSTALLATION_ID';const REGISTRATION_INFO_KEY='EXPO_NOTIFICATIONS_REGISTRATION_INFO';let getFallbackInstallationId=()=>{const sessionInstallationId=uuid.v4();getFallbackInstallationId=()=>sessionInstallationId;};export default{getInstallationIdAsync:async()=>{let installationId;try{installationId=localStorage.getItem(INSTALLATION_ID_KEY);if(!installationId||typeof installationId!=='string'){installationId=uuid.v4();localStorage.setItem(INSTALLATION_ID_KEY,installationId);}}catch{installationId=getFallbackInstallationId();}return installationId;},getRegistrationInfoAsync:async()=>{if(typeof localStorage==='undefined'){return null;}return localStorage.getItem(REGISTRATION_INFO_KEY);},setRegistrationInfoAsync:async registrationInfo=>{if(typeof localStorage==='undefined'){return;}try{if(registrationInfo){localStorage.setItem(REGISTRATION_INFO_KEY,registrationInfo);}else{localStorage.removeItem(REGISTRATION_INFO_KEY);}}catch(error){throw new CodedError('ERR_NOTIFICATIONS_STORAGE_ERROR',`Could not modify localStorage to persist auto-registration information: ${error}`);}},addListener:()=>{},removeListeners:()=>{}};","map":{"version":3,"names":["CodedError","uuid","INSTALLATION_ID_KEY","REGISTRATION_INFO_KEY","getFallbackInstallationId","sessionInstallationId","v4","getInstallationIdAsync","installationId","localStorage","getItem","setItem","getRegistrationInfoAsync","setRegistrationInfoAsync","registrationInfo","removeItem","error","addListener","removeListeners"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/expo-notifications/src/ServerRegistrationModule.web.ts"],"sourcesContent":["import { CodedError, uuid } from 'expo-modules-core';\n\nimport { ServerRegistrationModule } from './ServerRegistrationModule.types';\n\nconst INSTALLATION_ID_KEY = 'EXPO_NOTIFICATIONS_INSTALLATION_ID';\nconst REGISTRATION_INFO_KEY = 'EXPO_NOTIFICATIONS_REGISTRATION_INFO';\n\n// Lazy fallback installationId per session initializer\nlet getFallbackInstallationId = () => {\n  const sessionInstallationId = uuid.v4();\n  getFallbackInstallationId = () => sessionInstallationId;\n};\n\nexport default {\n  getInstallationIdAsync: async () => {\n    let installationId;\n\n    try {\n      installationId = localStorage.getItem(INSTALLATION_ID_KEY);\n      if (!installationId || typeof installationId !== 'string') {\n        installationId = uuid.v4();\n        localStorage.setItem(INSTALLATION_ID_KEY, installationId);\n      }\n    } catch {\n      installationId = getFallbackInstallationId();\n    }\n\n    return installationId;\n  },\n  getRegistrationInfoAsync: async () => {\n    if (typeof localStorage === 'undefined') {\n      return null;\n    }\n    return localStorage.getItem(REGISTRATION_INFO_KEY);\n  },\n  setRegistrationInfoAsync: async (registrationInfo: string | null) => {\n    if (typeof localStorage === 'undefined') {\n      return;\n    }\n    try {\n      if (registrationInfo) {\n        localStorage.setItem(REGISTRATION_INFO_KEY, registrationInfo);\n      } else {\n        localStorage.removeItem(REGISTRATION_INFO_KEY);\n      }\n    } catch (error) {\n      throw new CodedError(\n        'ERR_NOTIFICATIONS_STORAGE_ERROR',\n        `Could not modify localStorage to persist auto-registration information: ${error}`\n      );\n    }\n  },\n  // mock implementations\n  addListener: () => {},\n  removeListeners: () => {},\n} as ServerRegistrationModule;\n"],"mappings":"AAAA,OAASA,UAAU,CAAEC,IAAI,KAAQ,mBAAmB,CAIpD,KAAM,CAAAC,mBAAmB,CAAG,oCAAoC,CAChE,KAAM,CAAAC,qBAAqB,CAAG,sCAAsC,CAGpE,GAAI,CAAAC,yBAAyB,CAAGA,CAAA,GAAK,CACnC,KAAM,CAAAC,qBAAqB,CAAGJ,IAAI,CAACK,EAAE,EAAE,CACvCF,yBAAyB,CAAGA,CAAA,GAAMC,qBAAqB,CACzD,CAAC,CAED,cAAe,CACbE,sBAAsB,CAAE,KAAAA,CAAA,GAAW,CACjC,GAAI,CAAAC,cAAc,CAElB,GAAI,CACFA,cAAc,CAAGC,YAAY,CAACC,OAAO,CAACR,mBAAmB,CAAC,CAC1D,GAAI,CAACM,cAAc,EAAI,MAAO,CAAAA,cAAc,GAAK,QAAQ,CAAE,CACzDA,cAAc,CAAGP,IAAI,CAACK,EAAE,EAAE,CAC1BG,YAAY,CAACE,OAAO,CAACT,mBAAmB,CAAEM,cAAc,CAAC,C,EAE3D,KAAM,CACNA,cAAc,CAAGJ,yBAAyB,EAAE,C,CAG9C,MAAO,CAAAI,cAAc,CACvB,CAAC,CACDI,wBAAwB,CAAE,KAAAA,CAAA,GAAW,CACnC,GAAI,MAAO,CAAAH,YAAY,GAAK,WAAW,CAAE,CACvC,MAAO,KAAI,C,CAEb,MAAO,CAAAA,YAAY,CAACC,OAAO,CAACP,qBAAqB,CAAC,CACpD,CAAC,CACDU,wBAAwB,CAAE,KAAO,CAAAC,gBAA+B,EAAI,CAClE,GAAI,MAAO,CAAAL,YAAY,GAAK,WAAW,CAAE,CACvC,O,CAEF,GAAI,CACF,GAAIK,gBAAgB,CAAE,CACpBL,YAAY,CAACE,OAAO,CAACR,qBAAqB,CAAEW,gBAAgB,CAAC,C,CAC9D,IAAM,CACLL,YAAY,CAACM,UAAU,CAACZ,qBAAqB,CAAC,C,EAEhD,MAAOa,KAAK,CAAE,CACd,KAAM,IAAI,CAAAhB,UAAU,CAClB,iCAAiC,CACjC,2EAA2EgB,KAAK,EAAE,CACnF,C,CAEL,CAAC,CAEDC,WAAW,CAAEA,CAAA,GAAK,CAAE,CAAC,CACrBC,eAAe,CAAEA,CAAA,GAAK,CAAE,C,CACG","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}