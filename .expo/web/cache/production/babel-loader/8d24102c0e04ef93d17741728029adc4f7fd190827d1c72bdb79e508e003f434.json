{"ast":null,"code":"import{UnavailabilityError}from'expo-modules-core';import NotificationPresenter from'./NotificationPresenterModule';export default async function dismissNotificationAsync(notificationIdentifier){if(!NotificationPresenter.dismissNotificationAsync){throw new UnavailabilityError('Notifications','dismissNotificationAsync');}return await NotificationPresenter.dismissNotificationAsync(notificationIdentifier);}","map":{"version":3,"names":["UnavailabilityError","NotificationPresenter","dismissNotificationAsync","notificationIdentifier"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/expo-notifications/src/dismissNotificationAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationPresenter from './NotificationPresenterModule';\n\n/**\n * Removes notification displayed in the notification tray (Notification Center).\n * @param notificationIdentifier The notification identifier, obtained either via `setNotificationHandler` method or in the listener added with `addNotificationReceivedListener`.\n * @return A Promise which resolves once the request to dismiss the notification is successfully dispatched to the notifications manager.\n * @header dismiss\n */\nexport default async function dismissNotificationAsync(\n  notificationIdentifier: string\n): Promise<void> {\n  if (!NotificationPresenter.dismissNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'dismissNotificationAsync');\n  }\n\n  return await NotificationPresenter.dismissNotificationAsync(notificationIdentifier);\n}\n"],"mappings":"AAAA,OAASA,mBAAmB,KAAQ,mBAAmB,CAEvD,MAAO,CAAAC,qBAAqB,KAAM,+BAA+B,CAQjE,cAAe,eAAe,CAAAC,wBAAwBA,CACpDC,sBAA8B,EAE9B,GAAI,CAACF,qBAAqB,CAACC,wBAAwB,CAAE,CACnD,KAAM,IAAI,CAAAF,mBAAmB,CAAC,eAAe,CAAE,0BAA0B,CAAC,C,CAG5E,MAAO,MAAM,CAAAC,qBAAqB,CAACC,wBAAwB,CAACC,sBAAsB,CAAC,CACrF","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}