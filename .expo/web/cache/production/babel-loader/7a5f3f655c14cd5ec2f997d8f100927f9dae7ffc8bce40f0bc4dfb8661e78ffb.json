{"ast":null,"code":"\"use strict\";import _objectWithoutPropertiesLoose from\"@babel/runtime/helpers/objectWithoutPropertiesLoose\";const _excluded=[\"enabled\"],_excluded2=[\"visible\",\"children\"];import{ResourceSavingView}from'@react-navigation/elements';import*as React from'react';import View from\"react-native-web/dist/exports/View\";import{jsx as _jsx}from\"react/jsx-runtime\";let Screens;try{Screens=require('react-native-screens');}catch(e){}export const MaybeScreenContainer=_ref=>{let{enabled}=_ref,rest=_objectWithoutPropertiesLoose(_ref,_excluded);if(Screens?.screensEnabled?.()){return _jsx(Screens.ScreenContainer,Object.assign({enabled:enabled},rest));}return _jsx(View,Object.assign({},rest));};export function MaybeScreen(_ref2){let{visible,children}=_ref2,rest=_objectWithoutPropertiesLoose(_ref2,_excluded2);if(Screens?.screensEnabled?.()){return _jsx(Screens.Screen,Object.assign({activityState:visible?2:0},rest,{children:children}));}return _jsx(ResourceSavingView,Object.assign({visible:visible},rest,{children:children}));}","map":{"version":3,"names":["ResourceSavingView","React","View","jsx","_jsx","Screens","require","e","MaybeScreenContainer","_ref","enabled","rest","_objectWithoutPropertiesLoose","_excluded","screensEnabled","ScreenContainer","Object","assign","MaybeScreen","_ref2","visible","children","_excluded2","Screen","activityState"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/@react-navigation/drawer/src/views/ScreenFallback.tsx"],"sourcesContent":["import { ResourceSavingView } from '@react-navigation/elements';\nimport * as React from 'react';\nimport {\n  type StyleProp,\n  View,\n  type ViewProps,\n  type ViewStyle,\n} from 'react-native';\n\ntype Props = {\n  visible: boolean;\n  children: React.ReactNode;\n  enabled: boolean;\n  freezeOnBlur?: boolean;\n  shouldFreeze: boolean;\n  style?: StyleProp<ViewStyle>;\n};\n\nlet Screens: typeof import('react-native-screens') | undefined;\n\ntry {\n  Screens = require('react-native-screens');\n} catch (e) {\n  // Ignore\n}\n\nexport const MaybeScreenContainer = ({\n  enabled,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  hasTwoStates: boolean;\n  children: React.ReactNode;\n}) => {\n  if (Screens?.screensEnabled?.()) {\n    return <Screens.ScreenContainer enabled={enabled} {...rest} />;\n  }\n\n  return <View {...rest} />;\n};\n\nexport function MaybeScreen({ visible, children, ...rest }: Props) {\n  if (Screens?.screensEnabled?.()) {\n    return (\n      <Screens.Screen activityState={visible ? 2 : 0} {...rest}>\n        {children}\n      </Screens.Screen>\n    );\n  }\n\n  return (\n    <ResourceSavingView visible={visible} {...rest}>\n      {children}\n    </ResourceSavingView>\n  );\n}\n"],"mappings":"0KAAA,OAASA,kBAAkB,KAAQ,4BAA4B,CAC/D,MAAO,GAAK,CAAAC,KAAK,KAAM,OAAO,QAAAC,IAAA,0CAMR,OAAAC,GAAA,IAAAC,IAAA,yBAWtB,GAAI,CAAAC,OAA0D,CAE9D,GAAI,CACFA,OAAO,CAAGC,OAAO,CAAC,sBAAsB,CAAC,CAC3C,CAAE,MAAOC,CAAC,CAAE,CACV,CAGF,MAAO,MAAM,CAAAC,oBAAoB,CAAGC,IAAA,EAO9B,IAP+B,CACnCC,OAMF,CAAC,CAAAD,IAAA,CALIE,IAAA,CAAAC,6BAAA,CAAAH,IAAA,CAAAI,SAAA,EAMH,GAAIR,OAAO,EAAES,cAAc,GAAG,CAAC,CAAE,CAC/B,MAAO,CAAAV,IAAA,CAACC,OAAO,CAACU,eAAe,CAAAC,MAAA,CAAAC,MAAA,EAACP,OAAO,CAAEA,OAAQ,EAAKC,IAAA,CAAO,CAAC,CAChE,CAEA,MAAO,CAAAP,IAAA,CAACF,IAAI,CAAAc,MAAA,CAAAC,MAAA,IAAKN,IAAA,CAAO,CAAC,CAC3B,CAAC,CAED,MAAO,SAAS,CAAAO,WAAWA,CAAAC,KAAA,CAAwC,IAAvC,CAAEC,OAAO,CAAEC,QAAyB,CAAC,CAAAF,KAAA,CAAbR,IAAA,CAAAC,6BAAA,CAAAO,KAAA,CAAAG,UAAA,EAClD,GAAIjB,OAAO,EAAES,cAAc,GAAG,CAAC,CAAE,CAC/B,MACE,CAAAV,IAAA,CAACC,OAAO,CAACkB,MAAM,CAAAP,MAAA,CAAAC,MAAA,EAACO,aAAa,CAAEJ,OAAO,CAAG,CAAC,CAAG,CAAE,EAAKT,IAAI,EAAAU,QAAA,CACrDA,QAAA,EACa,CAAC,CAErB,CAEA,MACE,CAAAjB,IAAA,CAACJ,kBAAkB,CAAAgB,MAAA,CAAAC,MAAA,EAACG,OAAO,CAAEA,OAAQ,EAAKT,IAAI,EAAAU,QAAA,CAC3CA,QAAA,EACiB,CAAC,CAEzB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}