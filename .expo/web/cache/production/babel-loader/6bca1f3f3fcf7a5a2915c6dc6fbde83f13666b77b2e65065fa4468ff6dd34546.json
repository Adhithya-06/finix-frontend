{"ast":null,"code":"import{UnavailabilityError}from'expo-modules-core';import NotificationScheduler from'./NotificationScheduler';export default async function cancelAllScheduledNotificationsAsync(){if(!NotificationScheduler.cancelAllScheduledNotificationsAsync){throw new UnavailabilityError('Notifications','cancelAllScheduledNotificationsAsync');}return await NotificationScheduler.cancelAllScheduledNotificationsAsync();}","map":{"version":3,"names":["UnavailabilityError","NotificationScheduler","cancelAllScheduledNotificationsAsync"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/expo-notifications/src/cancelAllScheduledNotificationsAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\n\n/**\n * Cancels all scheduled notifications.\n * @return A Promise that resolves once all the scheduled notifications are successfully canceled, or if there are no scheduled notifications.\n * @header schedule\n */\nexport default async function cancelAllScheduledNotificationsAsync(): Promise<void> {\n  if (!NotificationScheduler.cancelAllScheduledNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'cancelAllScheduledNotificationsAsync');\n  }\n\n  return await NotificationScheduler.cancelAllScheduledNotificationsAsync();\n}\n"],"mappings":"AAAA,OAASA,mBAAmB,KAAQ,mBAAmB,CAEvD,MAAO,CAAAC,qBAAqB,KAAM,yBAAyB,CAO3D,cAAe,eAAe,CAAAC,oCAAoCA,CAAA,EAChE,GAAI,CAACD,qBAAqB,CAACC,oCAAoC,CAAE,CAC/D,KAAM,IAAI,CAAAF,mBAAmB,CAAC,eAAe,CAAE,sCAAsC,CAAC,C,CAGxF,MAAO,MAAM,CAAAC,qBAAqB,CAACC,oCAAoC,EAAE,CAC3E","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}