{"ast":null,"code":"import{Platform}from'expo-modules-core';export default{async getDocumentAsync({type='*/*',multiple=false}){if(!Platform.isDOMAvailable){return{canceled:true,assets:null};}const input=document.createElement('input');input.style.display='none';input.setAttribute('type','file');input.setAttribute('accept',Array.isArray(type)?type.join(','):type);input.setAttribute('id',String(Math.random()));if(multiple){input.setAttribute('multiple','multiple');}document.body.appendChild(input);return new Promise((resolve,reject)=>{input.addEventListener('change',async()=>{if(input.files){const results=[];for(let i=0;i<input.files.length;i++){results.push(readFileAsync(input.files[i]));}try{const assets=await Promise.all(results);resolve({canceled:false,assets,output:input.files});}catch(e){reject(e);}}else{resolve({canceled:true,assets:null});}document.body.removeChild(input);});input.addEventListener('cancel',()=>{resolve({canceled:true,assets:null});});const event=new MouseEvent('click');input.dispatchEvent(event);});}};function readFileAsync(targetFile){return new Promise((resolve,reject)=>{const mimeType=targetFile.type;const reader=new FileReader();reader.onerror=()=>{reject(new Error(`Failed to read the selected media because the operation failed.`));};reader.onload=({target})=>{const uri=target.result;resolve({uri,mimeType,name:targetFile.name,lastModified:targetFile.lastModified,size:targetFile.size,file:targetFile});};reader.readAsDataURL(targetFile);});}","map":{"version":3,"names":["Platform","getDocumentAsync","type","multiple","isDOMAvailable","canceled","assets","input","document","createElement","style","display","setAttribute","Array","isArray","join","String","Math","random","body","appendChild","Promise","resolve","reject","addEventListener","files","results","i","length","push","readFileAsync","all","output","e","removeChild","event","MouseEvent","dispatchEvent","targetFile","mimeType","reader","FileReader","onerror","Error","onload","target","uri","result","name","lastModified","size","file","readAsDataURL"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/expo-document-picker/src/ExpoDocumentPicker.web.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\n\nimport { DocumentPickerAsset, DocumentPickerOptions, DocumentPickerResult } from './types';\n\nexport default {\n  async getDocumentAsync({\n    type = '*/*',\n    multiple = false,\n  }: DocumentPickerOptions): Promise<DocumentPickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n\n    const input = document.createElement('input');\n    input.style.display = 'none';\n    input.setAttribute('type', 'file');\n    input.setAttribute('accept', Array.isArray(type) ? type.join(',') : type);\n    input.setAttribute('id', String(Math.random()));\n    if (multiple) {\n      input.setAttribute('multiple', 'multiple');\n    }\n\n    document.body.appendChild(input);\n\n    return new Promise((resolve, reject) => {\n      input.addEventListener('change', async () => {\n        if (input.files) {\n          const results: Promise<DocumentPickerAsset>[] = [];\n          for (let i = 0; i < input.files.length; i++) {\n            results.push(readFileAsync(input.files[i]));\n          }\n          try {\n            const assets = await Promise.all(results);\n            resolve({ canceled: false, assets, output: input.files });\n          } catch (e) {\n            reject(e);\n          }\n        } else {\n          resolve({ canceled: true, assets: null });\n        }\n\n        document.body.removeChild(input);\n      });\n\n      input.addEventListener('cancel', () => {\n        resolve({ canceled: true, assets: null });\n      });\n\n      const event = new MouseEvent('click');\n      input.dispatchEvent(event);\n    });\n  },\n};\n\nfunction readFileAsync(targetFile: File): Promise<DocumentPickerAsset> {\n  return new Promise((resolve, reject) => {\n    const mimeType = targetFile.type;\n\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      resolve({\n        uri,\n        mimeType,\n        name: targetFile.name,\n        lastModified: targetFile.lastModified,\n        size: targetFile.size,\n        file: targetFile,\n      });\n    };\n\n    // Read in the image file as a binary string.\n    reader.readAsDataURL(targetFile);\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}