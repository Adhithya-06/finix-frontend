{"ast":null,"code":"import{UnavailabilityError}from'expo-modules-core';import NotificationScheduler from'./NotificationScheduler';import{mapNotificationRequest}from'./utils/mapNotificationResponse';export default async function getAllScheduledNotificationsAsync(){if(!NotificationScheduler.getAllScheduledNotificationsAsync){throw new UnavailabilityError('Notifications','getAllScheduledNotificationsAsync');}return(await NotificationScheduler.getAllScheduledNotificationsAsync()).map(request=>mapNotificationRequest(request));}","map":{"version":3,"names":["UnavailabilityError","NotificationScheduler","mapNotificationRequest","getAllScheduledNotificationsAsync","map","request"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/expo-notifications/src/getAllScheduledNotificationsAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\nimport { NotificationRequest } from './Notifications.types';\nimport { mapNotificationRequest } from './utils/mapNotificationResponse';\n\n/**\n * Fetches information about all scheduled notifications.\n * @return Returns a Promise resolving to an array of objects conforming to the [`Notification`](#notification) interface.\n * @header schedule\n */\nexport default async function getAllScheduledNotificationsAsync(): Promise<NotificationRequest[]> {\n  if (!NotificationScheduler.getAllScheduledNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'getAllScheduledNotificationsAsync');\n  }\n\n  return (await NotificationScheduler.getAllScheduledNotificationsAsync()).map((request) =>\n    mapNotificationRequest(request)\n  );\n}\n"],"mappings":"AAAA,OAASA,mBAAmB,KAAQ,mBAAmB,CAEvD,MAAO,CAAAC,qBAAqB,KAAM,yBAAyB,CAE3D,OAASC,sBAAsB,KAAQ,iCAAiC,CAOxE,cAAe,eAAe,CAAAC,iCAAiCA,CAAA,EAC7D,GAAI,CAACF,qBAAqB,CAACE,iCAAiC,CAAE,CAC5D,KAAM,IAAI,CAAAH,mBAAmB,CAAC,eAAe,CAAE,mCAAmC,CAAC,C,CAGrF,MAAO,CAAC,KAAM,CAAAC,qBAAqB,CAACE,iCAAiC,EAAE,EAAEC,GAAG,CAAEC,OAAO,EACnFH,sBAAsB,CAACG,OAAO,CAAC,CAChC,CACH","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}