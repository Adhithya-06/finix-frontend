{"ast":null,"code":"import{isRunningInExpoGo}from'expo';function areWeTestingWithJest(){return process.env.JEST_WORKER_ID!==undefined||false;}if(isRunningInExpoGo()&&!areWeTestingWithJest()){const message='`expo-notifications` functionality is not fully supported in Expo Go:\\n'+'We recommend you instead use a development build to avoid limitations. Learn more: https://expo.fyi/dev-client.';console.warn(message);}export{default as getDevicePushTokenAsync}from'./getDevicePushTokenAsync';export{default as unregisterForNotificationsAsync}from'./unregisterForNotificationsAsync';export{default as getExpoPushTokenAsync}from'./getExpoPushTokenAsync';export{default as getPresentedNotificationsAsync}from'./getPresentedNotificationsAsync';export{default as presentNotificationAsync}from'./presentNotificationAsync';export{default as dismissNotificationAsync}from'./dismissNotificationAsync';export{default as dismissAllNotificationsAsync}from'./dismissAllNotificationsAsync';export{default as getNotificationChannelsAsync}from'./getNotificationChannelsAsync';export{default as getNotificationChannelAsync}from'./getNotificationChannelAsync';export{default as setNotificationChannelAsync}from'./setNotificationChannelAsync';export{default as deleteNotificationChannelAsync}from'./deleteNotificationChannelAsync';export{default as getNotificationChannelGroupsAsync}from'./getNotificationChannelGroupsAsync';export{default as getNotificationChannelGroupAsync}from'./getNotificationChannelGroupAsync';export{default as setNotificationChannelGroupAsync}from'./setNotificationChannelGroupAsync';export{default as deleteNotificationChannelGroupAsync}from'./deleteNotificationChannelGroupAsync';export{default as getBadgeCountAsync}from'./getBadgeCountAsync';export{default as setBadgeCountAsync}from'./setBadgeCountAsync';export{default as getAllScheduledNotificationsAsync}from'./getAllScheduledNotificationsAsync';export{default as scheduleNotificationAsync}from'./scheduleNotificationAsync';export{default as cancelScheduledNotificationAsync}from'./cancelScheduledNotificationAsync';export{default as cancelAllScheduledNotificationsAsync}from'./cancelAllScheduledNotificationsAsync';export{default as getNotificationCategoriesAsync}from'./getNotificationCategoriesAsync';export{default as setNotificationCategoryAsync}from'./setNotificationCategoryAsync';export{default as deleteNotificationCategoryAsync}from'./deleteNotificationCategoryAsync';export{default as getNextTriggerDateAsync}from'./getNextTriggerDateAsync';export{default as useLastNotificationResponse}from'./useLastNotificationResponse';export{setAutoServerRegistrationEnabledAsync}from'./DevicePushTokenAutoRegistration.fx';export{default as registerTaskAsync}from'./registerTaskAsync';export{default as unregisterTaskAsync}from'./unregisterTaskAsync';export*from'./TokenEmitter';export*from'./NotificationsEmitter';export*from'./NotificationsHandler';export*from'./NotificationPermissions';export*from'./NotificationChannelGroupManager.types';export*from'./NotificationChannelManager.types';export*from'./NotificationPermissions.types';export*from'./Notifications.types';export*from'./Tokens.types';","map":{"version":3,"names":["isRunningInExpoGo","areWeTestingWithJest","process","env","JEST_WORKER_ID","undefined","message","console","warn","default","getDevicePushTokenAsync","unregisterForNotificationsAsync","getExpoPushTokenAsync","getPresentedNotificationsAsync","presentNotificationAsync","dismissNotificationAsync","dismissAllNotificationsAsync","getNotificationChannelsAsync","getNotificationChannelAsync","setNotificationChannelAsync","deleteNotificationChannelAsync","getNotificationChannelGroupsAsync","getNotificationChannelGroupAsync","setNotificationChannelGroupAsync","deleteNotificationChannelGroupAsync","getBadgeCountAsync","setBadgeCountAsync","getAllScheduledNotificationsAsync","scheduleNotificationAsync","cancelScheduledNotificationAsync","cancelAllScheduledNotificationsAsync","getNotificationCategoriesAsync","setNotificationCategoryAsync","deleteNotificationCategoryAsync","getNextTriggerDateAsync","useLastNotificationResponse","setAutoServerRegistrationEnabledAsync","registerTaskAsync","unregisterTaskAsync"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/expo-notifications/src/index.ts"],"sourcesContent":["import { isRunningInExpoGo } from 'expo';\n\nfunction areWeTestingWithJest() {\n  return process.env.JEST_WORKER_ID !== undefined || process.env.NODE_ENV === 'TEST';\n}\n\nif (isRunningInExpoGo() && !areWeTestingWithJest()) {\n  const message =\n    '`expo-notifications` functionality is not fully supported in Expo Go:\\n' +\n    'We recommend you instead use a development build to avoid limitations. Learn more: https://expo.fyi/dev-client.';\n  console.warn(message);\n}\n\nexport { default as getDevicePushTokenAsync } from './getDevicePushTokenAsync';\nexport { default as unregisterForNotificationsAsync } from './unregisterForNotificationsAsync';\nexport { default as getExpoPushTokenAsync } from './getExpoPushTokenAsync';\nexport { default as getPresentedNotificationsAsync } from './getPresentedNotificationsAsync';\nexport { default as presentNotificationAsync } from './presentNotificationAsync';\nexport { default as dismissNotificationAsync } from './dismissNotificationAsync';\nexport { default as dismissAllNotificationsAsync } from './dismissAllNotificationsAsync';\nexport { default as getNotificationChannelsAsync } from './getNotificationChannelsAsync';\nexport { default as getNotificationChannelAsync } from './getNotificationChannelAsync';\nexport { default as setNotificationChannelAsync } from './setNotificationChannelAsync';\nexport { default as deleteNotificationChannelAsync } from './deleteNotificationChannelAsync';\nexport { default as getNotificationChannelGroupsAsync } from './getNotificationChannelGroupsAsync';\nexport { default as getNotificationChannelGroupAsync } from './getNotificationChannelGroupAsync';\nexport { default as setNotificationChannelGroupAsync } from './setNotificationChannelGroupAsync';\nexport { default as deleteNotificationChannelGroupAsync } from './deleteNotificationChannelGroupAsync';\nexport { default as getBadgeCountAsync } from './getBadgeCountAsync';\nexport { default as setBadgeCountAsync } from './setBadgeCountAsync';\nexport { default as getAllScheduledNotificationsAsync } from './getAllScheduledNotificationsAsync';\nexport { default as scheduleNotificationAsync } from './scheduleNotificationAsync';\nexport { default as cancelScheduledNotificationAsync } from './cancelScheduledNotificationAsync';\nexport { default as cancelAllScheduledNotificationsAsync } from './cancelAllScheduledNotificationsAsync';\nexport { default as getNotificationCategoriesAsync } from './getNotificationCategoriesAsync';\nexport { default as setNotificationCategoryAsync } from './setNotificationCategoryAsync';\nexport { default as deleteNotificationCategoryAsync } from './deleteNotificationCategoryAsync';\nexport { default as getNextTriggerDateAsync } from './getNextTriggerDateAsync';\nexport { default as useLastNotificationResponse } from './useLastNotificationResponse';\nexport { setAutoServerRegistrationEnabledAsync } from './DevicePushTokenAutoRegistration.fx';\nexport { default as registerTaskAsync } from './registerTaskAsync';\nexport { default as unregisterTaskAsync } from './unregisterTaskAsync';\nexport * from './TokenEmitter';\nexport * from './NotificationsEmitter';\nexport * from './NotificationsHandler';\nexport * from './NotificationPermissions';\nexport * from './NotificationChannelGroupManager.types';\nexport * from './NotificationChannelManager.types';\nexport * from './NotificationPermissions.types';\nexport * from './Notifications.types';\nexport * from './Tokens.types';\n"],"mappings":"AAAA,OAASA,iBAAiB,KAAQ,MAAM,CAExC,QAAS,CAAAC,oBAAoBA,CAAA,EAC3B,MAAO,CAAAC,OAAO,CAACC,GAAG,CAACC,cAAc,GAAKC,SAAS,OAAmC,CACpF,CAEA,GAAIL,iBAAiB,EAAE,EAAI,CAACC,oBAAoB,EAAE,CAAE,CAClD,KAAM,CAAAK,OAAO,CACX,yEAAyE,CACzE,iHAAiH,CACnHC,OAAO,CAACC,IAAI,CAACF,OAAO,CAAC,C,CAGvB,OAASG,OAAO,GAAI,CAAAC,uBAAuB,KAAQ,2BAA2B,CAC9E,OAASD,OAAO,GAAI,CAAAE,+BAA+B,KAAQ,mCAAmC,CAC9F,OAASF,OAAO,GAAI,CAAAG,qBAAqB,KAAQ,yBAAyB,CAC1E,OAASH,OAAO,GAAI,CAAAI,8BAA8B,KAAQ,kCAAkC,CAC5F,OAASJ,OAAO,GAAI,CAAAK,wBAAwB,KAAQ,4BAA4B,CAChF,OAASL,OAAO,GAAI,CAAAM,wBAAwB,KAAQ,4BAA4B,CAChF,OAASN,OAAO,GAAI,CAAAO,4BAA4B,KAAQ,gCAAgC,CACxF,OAASP,OAAO,GAAI,CAAAQ,4BAA4B,KAAQ,gCAAgC,CACxF,OAASR,OAAO,GAAI,CAAAS,2BAA2B,KAAQ,+BAA+B,CACtF,OAAST,OAAO,GAAI,CAAAU,2BAA2B,KAAQ,+BAA+B,CACtF,OAASV,OAAO,GAAI,CAAAW,8BAA8B,KAAQ,kCAAkC,CAC5F,OAASX,OAAO,GAAI,CAAAY,iCAAiC,KAAQ,qCAAqC,CAClG,OAASZ,OAAO,GAAI,CAAAa,gCAAgC,KAAQ,oCAAoC,CAChG,OAASb,OAAO,GAAI,CAAAc,gCAAgC,KAAQ,oCAAoC,CAChG,OAASd,OAAO,GAAI,CAAAe,mCAAmC,KAAQ,uCAAuC,CACtG,OAASf,OAAO,GAAI,CAAAgB,kBAAkB,KAAQ,sBAAsB,CACpE,OAAShB,OAAO,GAAI,CAAAiB,kBAAkB,KAAQ,sBAAsB,CACpE,OAASjB,OAAO,GAAI,CAAAkB,iCAAiC,KAAQ,qCAAqC,CAClG,OAASlB,OAAO,GAAI,CAAAmB,yBAAyB,KAAQ,6BAA6B,CAClF,OAASnB,OAAO,GAAI,CAAAoB,gCAAgC,KAAQ,oCAAoC,CAChG,OAASpB,OAAO,GAAI,CAAAqB,oCAAoC,KAAQ,wCAAwC,CACxG,OAASrB,OAAO,GAAI,CAAAsB,8BAA8B,KAAQ,kCAAkC,CAC5F,OAAStB,OAAO,GAAI,CAAAuB,4BAA4B,KAAQ,gCAAgC,CACxF,OAASvB,OAAO,GAAI,CAAAwB,+BAA+B,KAAQ,mCAAmC,CAC9F,OAASxB,OAAO,GAAI,CAAAyB,uBAAuB,KAAQ,2BAA2B,CAC9E,OAASzB,OAAO,GAAI,CAAA0B,2BAA2B,KAAQ,+BAA+B,CACtF,OAASC,qCAAqC,KAAQ,sCAAsC,CAC5F,OAAS3B,OAAO,GAAI,CAAA4B,iBAAiB,KAAQ,qBAAqB,CAClE,OAAS5B,OAAO,GAAI,CAAA6B,mBAAmB,KAAQ,uBAAuB,CACtE,WAAc,gBAAgB,CAC9B,WAAc,wBAAwB,CACtC,WAAc,wBAAwB,CACtC,WAAc,2BAA2B,CACzC,WAAc,yCAAyC,CACvD,WAAc,oCAAoC,CAClD,WAAc,iCAAiC,CAC/C,WAAc,uBAAuB,CACrC,WAAc,gBAAgB","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}