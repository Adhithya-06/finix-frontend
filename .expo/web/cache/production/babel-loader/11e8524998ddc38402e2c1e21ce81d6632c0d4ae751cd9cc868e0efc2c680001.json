{"ast":null,"code":"import{UnavailabilityError}from'expo-modules-core';import NotificationCategoriesModule from'./NotificationCategoriesModule';export default async function setNotificationCategoryAsync(identifier,actions,options){if(!NotificationCategoriesModule.setNotificationCategoryAsync){throw new UnavailabilityError('Notifications','setNotificationCategoryAsync');}return await NotificationCategoriesModule.setNotificationCategoryAsync(identifier,actions,options);}","map":{"version":3,"names":["UnavailabilityError","NotificationCategoriesModule","setNotificationCategoryAsync","identifier","actions","options"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/expo-notifications/src/setNotificationCategoryAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationCategoriesModule from './NotificationCategoriesModule';\nimport {\n  NotificationCategory,\n  NotificationAction,\n  NotificationCategoryOptions,\n} from './Notifications.types';\n\n/**\n * Sets the new notification category.\n * @param identifier A string to associate as the ID of this category. You will pass this string in as the `categoryIdentifier`\n * in your [`NotificationContent`](#notificationcontent) to associate a notification with this category.\n * > Don't use the characters `:` or `-` in your category identifier. If you do, categories might not work as expected.\n * @param actions An array of [`NotificationAction`](#notificationaction), which describe the actions associated with this category.\n * @param options An optional object of additional configuration options for your category.\n * @return A Promise which resolves to the category you just have created.\n * @platform android\n * @platform ios\n * @header categories\n */\nexport default async function setNotificationCategoryAsync(\n  identifier: string,\n  actions: NotificationAction[],\n  options?: NotificationCategoryOptions\n): Promise<NotificationCategory> {\n  if (!NotificationCategoriesModule.setNotificationCategoryAsync) {\n    throw new UnavailabilityError('Notifications', 'setNotificationCategoryAsync');\n  }\n\n  return await NotificationCategoriesModule.setNotificationCategoryAsync(\n    identifier,\n    actions,\n    options\n  );\n}\n"],"mappings":"AAAA,OAASA,mBAAmB,KAAQ,mBAAmB,CAEvD,MAAO,CAAAC,4BAA4B,KAAM,gCAAgC,CAmBzE,cAAe,eAAe,CAAAC,4BAA4BA,CACxDC,UAAkB,CAClBC,OAA6B,CAC7BC,OAAqC,EAErC,GAAI,CAACJ,4BAA4B,CAACC,4BAA4B,CAAE,CAC9D,KAAM,IAAI,CAAAF,mBAAmB,CAAC,eAAe,CAAE,8BAA8B,CAAC,C,CAGhF,MAAO,MAAM,CAAAC,4BAA4B,CAACC,4BAA4B,CACpEC,UAAU,CACVC,OAAO,CACPC,OAAO,CACR,CACH","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}