{"ast":null,"code":"let lastSetBadgeCount=0;const badgeModule={addListener:()=>{},removeListeners:()=>{},getBadgeCountAsync:async()=>{return lastSetBadgeCount;},setBadgeCountAsync:async(badgeCount,options)=>{if(false){return false;}const badgin=require('badgin');if(badgeCount>0){badgin.set(badgeCount,options);}else{badgin.clear();}lastSetBadgeCount=badgeCount;return true;}};export default badgeModule;","map":{"version":3,"names":["lastSetBadgeCount","badgeModule","addListener","removeListeners","getBadgeCountAsync","setBadgeCountAsync","badgeCount","options","badgin","require","set","clear"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/expo-notifications/src/BadgeModule.web.ts"],"sourcesContent":["import { BadgeModule } from './BadgeModule.types';\n\nlet lastSetBadgeCount = 0;\n\nconst badgeModule: BadgeModule = {\n  addListener: () => {},\n  removeListeners: () => {},\n  getBadgeCountAsync: async () => {\n    return lastSetBadgeCount;\n  },\n  setBadgeCountAsync: async (badgeCount, options) => {\n    // If this module is loaded in SSR (NextJS), we can't modify the badge.\n    // It also can't load the badgin module, that instantly invokes methods on window.\n    if (typeof window === 'undefined') {\n      return false;\n    }\n    const badgin = require('badgin');\n    if (badgeCount > 0) {\n      badgin.set(badgeCount, options);\n    } else {\n      badgin.clear();\n    }\n    lastSetBadgeCount = badgeCount;\n    return true;\n  },\n};\n\nexport default badgeModule;\n"],"mappings":"AAEA,GAAI,CAAAA,iBAAiB,CAAG,CAAC,CAEzB,KAAM,CAAAC,WAAW,CAAgB,CAC/BC,WAAW,CAAEA,CAAA,GAAK,CAAE,CAAC,CACrBC,eAAe,CAAEA,CAAA,GAAK,CAAE,CAAC,CACzBC,kBAAkB,CAAE,KAAAA,CAAA,GAAW,CAC7B,MAAO,CAAAJ,iBAAiB,CAC1B,CAAC,CACDK,kBAAkB,CAAE,KAAAA,CAAOC,UAAU,CAAEC,OAAO,GAAI,CAGhD,SAAmC,CACjC,MAAO,MAAK,C,CAEd,KAAM,CAAAC,MAAM,CAAGC,OAAO,CAAC,QAAQ,CAAC,CAChC,GAAIH,UAAU,CAAG,CAAC,CAAE,CAClBE,MAAM,CAACE,GAAG,CAACJ,UAAU,CAAEC,OAAO,CAAC,C,CAChC,IAAM,CACLC,MAAM,CAACG,KAAK,EAAE,C,CAEhBX,iBAAiB,CAAGM,UAAU,CAC9B,MAAO,KAAI,CACb,C,CACD,CAED,cAAe,CAAAL,WAAW","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}