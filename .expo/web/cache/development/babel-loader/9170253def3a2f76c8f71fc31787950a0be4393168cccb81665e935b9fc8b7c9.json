{"ast":null,"code":"\"use strict\";\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useLatestCallback from 'use-latest-callback';\nimport { DrawerProgressContext } from \"../utils/DrawerProgressContext.js\";\nimport { getDrawerWidth } from \"../utils/getDrawerWidth.js\";\nimport { useFakeSharedValue } from \"../utils/useFakeSharedValue.js\";\nimport { Overlay } from './Overlay';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Drawer({\n  layout: customLayout,\n  direction = 'ltr',\n  drawerPosition = direction === 'rtl' ? 'right' : 'left',\n  drawerStyle,\n  drawerType = 'front',\n  onClose,\n  onTransitionStart,\n  onTransitionEnd,\n  open,\n  overlayStyle,\n  overlayAccessibilityLabel,\n  renderDrawerContent,\n  children,\n  style\n}) {\n  const windowDimensions = useWindowDimensions();\n  const layout = customLayout ?? windowDimensions;\n  const drawerWidth = getDrawerWidth({\n    layout,\n    drawerStyle\n  });\n  const progress = useFakeSharedValue(open ? 1 : 0);\n  React.useEffect(() => {\n    progress.value = open ? 1 : 0;\n  }, [open, progress]);\n  const drawerRef = React.useRef(null);\n  const onTransitionStartLatest = useLatestCallback(() => {\n    onTransitionStart?.(open === false);\n  });\n  const onTransitionEndLatest = useLatestCallback(() => {\n    onTransitionEnd?.(open === false);\n  });\n  React.useEffect(() => {\n    const element = drawerRef.current;\n    element?.addEventListener('transitionstart', onTransitionStartLatest);\n    element?.addEventListener('transitionend', onTransitionEndLatest);\n    return () => {\n      element?.removeEventListener('transitionstart', onTransitionStartLatest);\n      element?.removeEventListener('transitionend', onTransitionEndLatest);\n    };\n  }, [onTransitionEndLatest, onTransitionStartLatest]);\n  const isOpen = drawerType === 'permanent' ? true : open;\n  const isRight = drawerPosition === 'right';\n  let translateX = 0;\n  if (open || drawerType === 'back') {\n    if (direction === 'rtl') {\n      translateX = drawerPosition === 'left' ? drawerWidth - layout.width : 0;\n    } else {\n      translateX = drawerPosition === 'left' ? 0 : layout.width - drawerWidth;\n    }\n  } else {\n    if (direction === 'rtl') {\n      translateX = drawerPosition === 'left' ? -layout.width : drawerWidth;\n    } else {\n      translateX = drawerPosition === 'left' ? -drawerWidth : layout.width;\n    }\n  }\n  const drawerAnimatedStyle = drawerType !== 'permanent' ? {\n    transition: 'transform 0.3s',\n    transform: [{\n      translateX\n    }]\n  } : null;\n  const contentAnimatedStyle = drawerType !== 'permanent' ? {\n    transition: 'transform 0.3s',\n    transform: [{\n      translateX: open ? drawerType === 'front' ? 0 : drawerWidth * (drawerPosition === 'left' ? 1 : -1) : 0\n    }]\n  } : null;\n  return _jsx(View, {\n    style: [styles.container, style],\n    children: _jsx(DrawerProgressContext.Provider, {\n      value: progress,\n      children: _jsxs(View, {\n        style: [styles.main, {\n          flexDirection: drawerType === 'permanent' ? isRight && direction === 'ltr' || !isRight && direction === 'rtl' ? 'row' : 'row-reverse' : 'row'\n        }],\n        children: [_jsxs(View, {\n          style: [styles.content, contentAnimatedStyle],\n          children: [_jsx(View, {\n            accessibilityElementsHidden: isOpen && drawerType !== 'permanent',\n            importantForAccessibility: isOpen && drawerType !== 'permanent' ? 'no-hide-descendants' : 'auto',\n            style: styles.content,\n            children: children\n          }), drawerType !== 'permanent' ? _jsx(Overlay, {\n            open: open,\n            progress: progress,\n            onPress: () => onClose(),\n            style: overlayStyle,\n            accessibilityLabel: overlayAccessibilityLabel\n          }) : null]\n        }), _jsx(View, {\n          ref: drawerRef,\n          style: [styles.drawer, {\n            width: drawerWidth,\n            position: drawerType === 'permanent' ? 'relative' : 'absolute',\n            zIndex: drawerType === 'back' ? -1 : 0\n          }, drawerAnimatedStyle, drawerStyle],\n          children: renderDrawerContent()\n        })]\n      })\n    })\n  });\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  drawer: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    backgroundColor: 'white'\n  },\n  content: {\n    flex: 1\n  },\n  main: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","StyleSheet","useWindowDimensions","View","useLatestCallback","DrawerProgressContext","getDrawerWidth","useFakeSharedValue","Overlay","jsx","_jsx","jsxs","_jsxs","Drawer","layout","customLayout","direction","drawerPosition","drawerStyle","drawerType","onClose","onTransitionStart","onTransitionEnd","open","overlayStyle","overlayAccessibilityLabel","renderDrawerContent","children","style","windowDimensions","drawerWidth","progress","useEffect","value","drawerRef","useRef","onTransitionStartLatest","onTransitionEndLatest","element","current","addEventListener","removeEventListener","isOpen","isRight","translateX","width","drawerAnimatedStyle","transition","transform","contentAnimatedStyle","styles","container","Provider","main","flexDirection","content","accessibilityElementsHidden","importantForAccessibility","onPress","accessibilityLabel","ref","drawer","position","zIndex","create","flex","top","bottom","maxWidth","backgroundColor"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/react-native-drawer-layout/src/views/Drawer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, useWindowDimensions, View } from 'react-native';\nimport useLatestCallback from 'use-latest-callback';\n\nimport type { DrawerProps } from '../types';\nimport { DrawerProgressContext } from '../utils/DrawerProgressContext';\nimport { getDrawerWidth } from '../utils/getDrawerWidth';\nimport { useFakeSharedValue } from '../utils/useFakeSharedValue';\nimport { Overlay } from './Overlay';\n\nexport function Drawer({\n  layout: customLayout,\n  direction = 'ltr',\n  drawerPosition = direction === 'rtl' ? 'right' : 'left',\n  drawerStyle,\n  drawerType = 'front',\n  onClose,\n  onTransitionStart,\n  onTransitionEnd,\n  open,\n  overlayStyle,\n  overlayAccessibilityLabel,\n  renderDrawerContent,\n  children,\n  style,\n}: DrawerProps) {\n  const windowDimensions = useWindowDimensions();\n\n  const layout = customLayout ?? windowDimensions;\n  const drawerWidth = getDrawerWidth({ layout, drawerStyle });\n\n  const progress = useFakeSharedValue(open ? 1 : 0);\n\n  React.useEffect(() => {\n    progress.value = open ? 1 : 0;\n  }, [open, progress]);\n\n  const drawerRef = React.useRef<View>(null);\n\n  const onTransitionStartLatest = useLatestCallback(() => {\n    onTransitionStart?.(open === false);\n  });\n\n  const onTransitionEndLatest = useLatestCallback(() => {\n    onTransitionEnd?.(open === false);\n  });\n\n  React.useEffect(() => {\n    const element = drawerRef.current as HTMLDivElement | null;\n\n    element?.addEventListener('transitionstart', onTransitionStartLatest);\n    element?.addEventListener('transitionend', onTransitionEndLatest);\n\n    return () => {\n      element?.removeEventListener('transitionstart', onTransitionStartLatest);\n      element?.removeEventListener('transitionend', onTransitionEndLatest);\n    };\n  }, [onTransitionEndLatest, onTransitionStartLatest]);\n\n  const isOpen = drawerType === 'permanent' ? true : open;\n  const isRight = drawerPosition === 'right';\n\n  let translateX = 0;\n\n  // The drawer stays in place at open position when `drawerType` is `back`\n  if (open || drawerType === 'back') {\n    if (direction === 'rtl') {\n      translateX = drawerPosition === 'left' ? drawerWidth - layout.width : 0;\n    } else {\n      translateX = drawerPosition === 'left' ? 0 : layout.width - drawerWidth;\n    }\n  } else {\n    if (direction === 'rtl') {\n      translateX = drawerPosition === 'left' ? -layout.width : drawerWidth;\n    } else {\n      translateX = drawerPosition === 'left' ? -drawerWidth : layout.width;\n    }\n  }\n\n  const drawerAnimatedStyle =\n    drawerType !== 'permanent'\n      ? {\n          transition: 'transform 0.3s',\n          transform: [{ translateX }],\n        }\n      : null;\n\n  const contentAnimatedStyle =\n    drawerType !== 'permanent'\n      ? {\n          transition: 'transform 0.3s',\n          transform: [\n            {\n              translateX: open\n                ? // The screen content stays in place when `drawerType` is `front`\n                  drawerType === 'front'\n                  ? 0\n                  : drawerWidth * (drawerPosition === 'left' ? 1 : -1)\n                : 0,\n            },\n          ],\n        }\n      : null;\n\n  return (\n    <View style={[styles.container, style]}>\n      <DrawerProgressContext.Provider value={progress}>\n        <View\n          style={[\n            styles.main,\n            {\n              flexDirection:\n                drawerType === 'permanent'\n                  ? (isRight && direction === 'ltr') ||\n                    (!isRight && direction === 'rtl')\n                    ? 'row'\n                    : 'row-reverse'\n                  : 'row',\n            },\n          ]}\n        >\n          <View style={[styles.content, contentAnimatedStyle]}>\n            <View\n              accessibilityElementsHidden={isOpen && drawerType !== 'permanent'}\n              importantForAccessibility={\n                isOpen && drawerType !== 'permanent'\n                  ? 'no-hide-descendants'\n                  : 'auto'\n              }\n              style={styles.content}\n            >\n              {children}\n            </View>\n            {drawerType !== 'permanent' ? (\n              <Overlay\n                open={open}\n                progress={progress}\n                onPress={() => onClose()}\n                style={overlayStyle}\n                accessibilityLabel={overlayAccessibilityLabel}\n              />\n            ) : null}\n          </View>\n          <View\n            ref={drawerRef}\n            style={[\n              styles.drawer,\n              {\n                width: drawerWidth,\n                position: drawerType === 'permanent' ? 'relative' : 'absolute',\n                zIndex: drawerType === 'back' ? -1 : 0,\n              },\n              drawerAnimatedStyle,\n              drawerStyle,\n            ]}\n          >\n            {renderDrawerContent()}\n          </View>\n        </View>\n      </DrawerProgressContext.Provider>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  drawer: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    backgroundColor: 'white',\n  },\n  content: {\n    flex: 1,\n  },\n  main: {\n    flex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}