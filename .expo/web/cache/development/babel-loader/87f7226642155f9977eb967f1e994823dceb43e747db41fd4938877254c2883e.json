{"ast":null,"code":"\"use strict\";\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nconst APPROX_APP_BAR_HEIGHT = 56;\nconst DEFAULT_DRAWER_WIDTH = 360;\nconst getDefaultDrawerWidth = ({\n  width\n}) => {\n  if (width - APPROX_APP_BAR_HEIGHT <= 360) {\n    return width - APPROX_APP_BAR_HEIGHT;\n  }\n  return DEFAULT_DRAWER_WIDTH;\n};\nexport function getDrawerWidth({\n  layout,\n  drawerStyle\n}) {\n  const {\n    width = getDefaultDrawerWidth(layout)\n  } = StyleSheet.flatten(drawerStyle) || {};\n  if (typeof width === 'string' && width.endsWith('%')) {\n    const percentage = Number(width.replace(/%$/, ''));\n    if (Number.isFinite(percentage)) {\n      return layout.width * (percentage / 100);\n    }\n  }\n  return typeof width === 'number' ? width : 0;\n}","map":{"version":3,"names":["APPROX_APP_BAR_HEIGHT","DEFAULT_DRAWER_WIDTH","getDefaultDrawerWidth","width","getDrawerWidth","layout","drawerStyle","StyleSheet","flatten","endsWith","percentage","Number","replace","isFinite"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/react-native-drawer-layout/src/utils/getDrawerWidth.tsx"],"sourcesContent":["import { type StyleProp, StyleSheet, type ViewStyle } from 'react-native';\n\nconst APPROX_APP_BAR_HEIGHT = 56;\nconst DEFAULT_DRAWER_WIDTH = 360;\n\nconst getDefaultDrawerWidth = ({ width }: { width: number }) => {\n  /**\n   * Default drawer width is 360dp\n   * On screens smaller than 320dp, ideally the drawer would collapse to a navigation bar\n   * https://m3.material.io/components/navigation-drawer/specs\n   */\n  if (width - APPROX_APP_BAR_HEIGHT <= 360) {\n    return width - APPROX_APP_BAR_HEIGHT;\n  }\n\n  return DEFAULT_DRAWER_WIDTH;\n};\n\nexport function getDrawerWidth({\n  layout,\n  drawerStyle,\n}: {\n  layout: { width: number; height: number };\n  drawerStyle?: StyleProp<ViewStyle>;\n}) {\n  const { width = getDefaultDrawerWidth(layout) } =\n    StyleSheet.flatten(drawerStyle) || {};\n\n  if (typeof width === 'string' && width.endsWith('%')) {\n    // Try to calculate width if a percentage is given\n    const percentage = Number(width.replace(/%$/, ''));\n\n    if (Number.isFinite(percentage)) {\n      return layout.width * (percentage / 100);\n    }\n  }\n\n  return typeof width === 'number' ? width : 0;\n}\n"],"mappings":";;;AAEA,MAAMA,qBAAqB,GAAG,EAAE;AAChC,MAAMC,oBAAoB,GAAG,GAAG;AAEhC,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAyB,CAAC,KAAK;EAM9D,IAAIA,KAAK,GAAGH,qBAAqB,IAAI,GAAG,EAAE;IACxC,OAAOG,KAAK,GAAGH,qBAAqB;EACtC;EAEA,OAAOC,oBAAoB;AAC7B,CAAC;AAED,OAAO,SAASG,cAAcA,CAAC;EAC7BC,MAAM;EACNC;AAIF,CAAC,EAAE;EACD,MAAM;IAAEH,KAAK,GAAGD,qBAAqB,CAACG,MAAM;EAAE,CAAC,GAC7CE,UAAU,CAACC,OAAO,CAACF,WAAW,CAAC,IAAI,CAAC,CAAC;EAEvC,IAAI,OAAOH,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACM,QAAQ,CAAC,GAAG,CAAC,EAAE;IAEpD,MAAMC,UAAU,GAAGC,MAAM,CAACR,KAAK,CAACS,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAElD,IAAID,MAAM,CAACE,QAAQ,CAACH,UAAU,CAAC,EAAE;MAC/B,OAAOL,MAAM,CAACF,KAAK,IAAIO,UAAU,GAAG,GAAG,CAAC;IAC1C;EACF;EAEA,OAAO,OAAOP,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,CAAC;AAC9C","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}