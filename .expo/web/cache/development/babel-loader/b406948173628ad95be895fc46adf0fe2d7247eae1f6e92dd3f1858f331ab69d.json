{"ast":null,"code":"var _jsxFileName = \"/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/context/ThemeContext.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  const [theme, setTheme] = useState(\"light\");\n  useEffect(() => {\n    const loadTheme = async () => {\n      const storedTheme = await AsyncStorage.getItem(\"appTheme\");\n      if (storedTheme) setTheme(storedTheme);\n    };\n    loadTheme();\n  }, []);\n  const toggleTheme = async () => {\n    const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(newTheme);\n    await AsyncStorage.setItem(\"appTheme\", newTheme);\n  };\n  return _jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","AsyncStorage","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","theme","setTheme","loadTheme","storedTheme","getItem","toggleTheme","newTheme","setItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n    const [theme, setTheme] = useState(\"light\"); // Default to light mode\n\n    useEffect(() => {\n        const loadTheme = async () => {\n            const storedTheme = await AsyncStorage.getItem(\"appTheme\");\n            if (storedTheme) setTheme(storedTheme);\n        };\n        loadTheme();\n    }, []);\n\n    const toggleTheme = async () => {\n        const newTheme = theme === \"light\" ? \"dark\" : \"light\";\n        setTheme(newTheme);\n        await AsyncStorage.setItem(\"appTheme\", newTheme);\n    };\n\n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n};\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,OAAO,MAAMC,YAAY,GAAGN,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,OAAO,CAAC;EAE3CC,SAAS,CAAC,MAAM;IACZ,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,WAAW,GAAG,MAAMT,YAAY,CAACU,OAAO,CAAC,UAAU,CAAC;MAC1D,IAAID,WAAW,EAAEF,QAAQ,CAACE,WAAW,CAAC;IAC1C,CAAC;IACDD,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMC,QAAQ,GAAGN,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IACrDC,QAAQ,CAACK,QAAQ,CAAC;IAClB,MAAMZ,YAAY,CAACa,OAAO,CAAC,UAAU,EAAED,QAAQ,CAAC;EACpD,CAAC;EAED,OACIV,OAAA,CAACC,YAAY,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAET,KAAK;MAAEK;IAAY,CAAE;IAAAN,QAAA,EAChDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}