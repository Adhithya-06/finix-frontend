{"ast":null,"code":"var _jsxFileName = \"/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/screens/TransactionsScreen.js\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport * as FileSystem from \"expo-file-system\";\nimport { PDFDocument } from \"pdf-lib\";\nimport Papa from \"papaparse\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TransactionsScreen = () => {\n  const [selectedYear, setSelectedYear] = useState(moment().year());\n  const [selectedMonth, setSelectedMonth] = useState(moment().month() + 1);\n  const [selectedDay, setSelectedDay] = useState(moment().date());\n  const [category, setCategory] = useState(\"Default\");\n  const [amount, setAmount] = useState(\"\");\n  const [transactions, setTransactions] = useState([]);\n  const [editIndex, setEditIndex] = useState(null);\n  const [editCategory, setEditCategory] = useState(\"\");\n  const [editAmount, setEditAmount] = useState(\"\");\n  const [editDate, setEditDate] = useState(\"\");\n  const [forceUpdate, setForceUpdate] = useState(0);\n  const [selectedFilterCategory, setSelectedFilterCategory] = useState(\"\");\n  const [customCategory, setCustomCategory] = useState(\"\");\n  const [loggedInEmail, setLoggedInEmail] = useState(\"\");\n  const formatSelectedDate = () => {\n    return `${selectedYear}-${selectedMonth.toString().padStart(2, \"0\")}-${selectedDay.toString().padStart(2, \"0\")}`;\n  };\n  useEffect(() => {\n    const fetchEmail = async () => {\n      const email = await AsyncStorage.getItem(\"userEmail\");\n      if (email) {\n        setLoggedInEmail(email);\n      }\n    };\n    fetchEmail();\n  }, []);\n  useEffect(() => {\n    if (!loggedInEmail) return;\n    const loadTransactions = async () => {\n      try {\n        const response = await axios.get(`https://finix-backend.onrender.com/transactions?email=${loggedInEmail}`);\n        if (response.status === 200) {\n          setTransactions(response.data);\n        } else {\n          console.error(\"Error fetching transactions:\", response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Error fetching transactions:\", error);\n      }\n    };\n    loadTransactions();\n  }, [loggedInEmail]);\n  const deleteTransaction = async transactionId => {\n    try {\n      const response = await fetch(`https://finix-backend.onrender.com/delete_transaction/${transactionId}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to delete transaction\");\n      }\n      setTransactions(transactions.filter(t => t.id !== transactionId));\n    } catch (error) {\n      console.error(\"Error deleting transaction:\", error);\n    }\n  };\n  const fetchTransactions = async () => {\n    if (!loggedInEmail) return;\n    try {\n      const response = await fetch(`https://finix-backend.onrender.com/transactions?email=${loggedInEmail}`);\n      const data = await response.json();\n      setTransactions(data);\n    } catch (error) {\n      console.error(\"Error fetching transactions:\", error);\n    }\n  };\n  useEffect(() => {\n    console.log(\"📊 Transactions updated:\", transactions);\n  }, [transactions]);\n  const editTransaction = index => {\n    const transactionToEdit = transactions[index];\n    setEditIndex(index);\n    setEditDate(transactionToEdit.date);\n    setEditCategory(transactionToEdit.category);\n    setEditAmount(transactionToEdit.amount.toString());\n  };\n  const saveTransaction = async () => {\n    if (editIndex === null) {\n      console.log(\"❌ No transaction is being edited.\");\n      return;\n    }\n    const updatedTransaction = {\n      id: transactions[editIndex].id,\n      date: editDate,\n      category: editCategory,\n      amount: parseFloat(editAmount)\n    };\n    console.log(\"📝 Attempting to save transaction:\", updatedTransaction);\n    try {\n      const response = await fetch(`https://finix-backend.onrender.com/update_transaction/${updatedTransaction.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(updatedTransaction)\n      });\n      if (!response.ok) {\n        throw new Error(`❌ Failed to update transaction: ${response.status}`);\n      }\n      console.log(\"✅ Transaction successfully updated in backend!\");\n      setTransactions(prevTransactions => prevTransactions.map(transaction => transaction.id === updatedTransaction.id ? updatedTransaction : transaction));\n      console.log(\"✅ Transactions updated in frontend state:\", transactions);\n      Alert.alert(\"Success\", \"Transaction Updated Successfully!\");\n    } catch (error) {\n      console.error(\"⚠️ Error saving transaction:\", error);\n    }\n    setEditIndex(null);\n  };\n  const handleSubmit = async () => {\n    if (!amount || category === \"Default\" && !customCategory) {\n      Alert.alert(\"Error\", \"Please enter an amount and select a category.\");\n      return;\n    }\n    const finalCategory = category === \"Other\" ? customCategory : category;\n    const newTransaction = {\n      date: formatSelectedDate(),\n      category: finalCategory,\n      amount: parseFloat(amount),\n      user_email: loggedInEmail\n    };\n    console.log(\"🧾 Submitting Transaction:\", newTransaction);\n    try {\n      const response = await fetch(\"https://finix-backend.onrender.com/add_transaction\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newTransaction)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to add transaction\");\n      }\n      fetchTransactions();\n      Alert.alert(\"Success\", \"Transaction Submitted Successfully!\");\n    } catch (error) {\n      console.error(\"Error saving transaction:\", error);\n    }\n    setCategory(\"\");\n    setCustomCategory(\"\");\n    setAmount(\"\");\n  };\n  console.log(\"Rendering Date Pickers:\", {\n    selectedYear,\n    selectedMonth,\n    selectedDay\n  });\n  return _jsxDEV(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    keyboardShouldPersistTaps: \"handled\",\n    children: _jsxDEV(View, {\n      style: styles.container,\n      children: [_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 7\n      }, this), _jsxDEV(View, {\n        style: styles.datePickerContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 3\n        }, this), _jsxDEV(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsxDEV(Picker, {\n            selectedValue: selectedYear || moment().year(),\n            onValueChange: val => setSelectedYear(val),\n            style: styles.picker,\n            children: [...Array(10)].map((_, i) => {\n              const year = moment().year() - i;\n              return _jsxDEV(Picker.Item, {\n                label: year.toString(),\n                value: year\n              }, year, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 14\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 3\n          }, this), _jsxDEV(Picker, {\n            selectedValue: selectedMonth || moment().month() + 1,\n            onValueChange: val => setSelectedMonth(val),\n            style: styles.picker,\n            children: Array.from({\n              length: 12\n            }, (_, i) => i + 1).map(month => _jsxDEV(Picker.Item, {\n              label: month.toString(),\n              value: month\n            }, month, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 7\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 3\n          }, this), _jsxDEV(Picker, {\n            selectedValue: selectedDay || moment().date(),\n            onValueChange: val => setSelectedDay(val),\n            style: styles.picker,\n            children: Array.from({\n              length: 31\n            }, (_, i) => i + 1).map(day => _jsxDEV(Picker.Item, {\n              label: day.toString(),\n              value: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 7\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 3\n        }, this), _jsxDEV(Text, {\n          style: styles.dateText,\n          children: [\"Selected Date: \", formatSelectedDate()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 7\n      }, this), _jsxDEV(Picker, {\n        selectedValue: category || \"Default\",\n        onValueChange: itemValue => {\n          setCategory(itemValue);\n          if (itemValue !== \"Other\") {\n            setCustomCategory(\"\");\n          }\n        },\n        style: [styles.picker, styles.categoryPicker],\n        children: [_jsxDEV(Picker.Item, {\n          label: \"Select a category\",\n          value: \"Default\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 3\n        }, this), _jsxDEV(Picker.Item, {\n          label: \"Food\",\n          value: \"Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 3\n        }, this), _jsxDEV(Picker.Item, {\n          label: \"Transport\",\n          value: \"Transport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 3\n        }, this), _jsxDEV(Picker.Item, {\n          label: \"Entertainment\",\n          value: \"Entertainment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 3\n        }, this), _jsxDEV(Picker.Item, {\n          label: \"Other\",\n          value: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 1\n      }, this), category === \"Other\" && _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter custom category\",\n        value: customCategory,\n        onChangeText: setCustomCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 3\n      }, this), _jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter Amount (\\xA3)\",\n        keyboardType: \"numeric\",\n        value: amount,\n        onChangeText: setAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 7\n      }, this), _jsxDEV(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: handleSubmit,\n        children: _jsxDEV(Text, {\n          style: styles.submitText,\n          children: \"Submit Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 7\n      }, this), transactions.length > 0 && _jsxDEV(View, {\n        style: styles.tableContainer,\n        children: [_jsxDEV(Text, {\n          style: styles.transactionTitle,\n          children: \"Transactions List:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), _jsxDEV(Picker, {\n          selectedValue: selectedFilterCategory,\n          onValueChange: itemValue => setSelectedFilterCategory(itemValue),\n          style: [styles.picker, styles.categoryPicker],\n          children: [_jsxDEV(Picker.Item, {\n            label: \"All Categories\",\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 3\n          }, this), _jsxDEV(Picker.Item, {\n            label: \"Food\",\n            value: \"Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 3\n          }, this), _jsxDEV(Picker.Item, {\n            label: \"Transport\",\n            value: \"Transport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 3\n          }, this), _jsxDEV(Picker.Item, {\n            label: \"Entertainment\",\n            value: \"Entertainment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 3\n          }, this), _jsxDEV(Picker.Item, {\n            label: \"Other\",\n            value: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 3\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), _jsxDEV(FlatList, {\n          data: selectedFilterCategory ? transactions.filter(t => selectedFilterCategory === \"Other\" ? ![\"Food\", \"Transport\", \"Entertainment\"].includes(t.category) : t.category === selectedFilterCategory) : transactions,\n          keyExtractor: (item, index) => index.toString(),\n          renderItem: ({\n            item,\n            index\n          }) => _jsxDEV(View, {\n            style: styles.tableRow,\n            children: editIndex === index ? _jsxDEV(_Fragment, {\n              children: [_jsxDEV(View, {\n                style: {\n                  flexDirection: \"row\"\n                },\n                children: [_jsxDEV(Picker, {\n                  selectedValue: selectedYear,\n                  onValueChange: val => setSelectedYear(val),\n                  style: styles.picker,\n                  children: [...Array(10)].map((_, i) => {\n                    const year = moment().year() - i;\n                    return _jsxDEV(Picker.Item, {\n                      label: year.toString(),\n                      value: year\n                    }, year, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 14\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 3\n                }, this), _jsxDEV(Picker, {\n                  selectedValue: selectedMonth,\n                  onValueChange: val => setSelectedMonth(val),\n                  style: styles.picker,\n                  children: Array.from({\n                    length: 12\n                  }, (_, i) => i + 1).map(month => _jsxDEV(Picker.Item, {\n                    label: month.toString(),\n                    value: month\n                  }, month, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 7\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 3\n                }, this), _jsxDEV(Picker, {\n                  selectedValue: selectedDay,\n                  onValueChange: val => setSelectedDay(val),\n                  style: styles.picker,\n                  children: Array.from({\n                    length: 31\n                  }, (_, i) => i + 1).map(day => _jsxDEV(Picker.Item, {\n                    label: day.toString(),\n                    value: day\n                  }, day, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 7\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 3\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this), _jsxDEV(TextInput, {\n                style: styles.editInput,\n                value: editCategory,\n                onChangeText: setEditCategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 21\n              }, this), _jsxDEV(TextInput, {\n                style: styles.editInput,\n                value: editAmount,\n                onChangeText: setEditAmount,\n                keyboardType: \"numeric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), _jsxDEV(TouchableOpacity, {\n                onPress: saveTransaction,\n                style: styles.saveButton,\n                children: _jsxDEV(Text, {\n                  style: styles.saveText,\n                  children: \"\\u2714\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : _jsxDEV(_Fragment, {\n              children: [_jsxDEV(Text, {\n                style: styles.rowCell,\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: styles.rowCell,\n                children: item.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this), _jsxDEV(Text, {\n                style: styles.rowCell,\n                children: [\"\\xA3\", item.amount.toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 21\n              }, this), _jsxDEV(TouchableOpacity, {\n                onPress: () => editTransaction(index),\n                style: styles.editButton,\n                children: _jsxDEV(Text, {\n                  style: styles.editText,\n                  children: \"\\u270F\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 21\n              }, this), _jsxDEV(TouchableOpacity, {\n                onPress: () => deleteTransaction(item.id),\n                style: styles.deleteButton,\n                children: _jsxDEV(Text, {\n                  style: styles.deleteText,\n                  children: \"\\uD83D\\uDDD1\\uFE0F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: \"#8E241F\"\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  dateSelector: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 10\n  },\n  dateButton: {\n    padding: 10,\n    backgroundColor: \"#ddd\",\n    borderRadius: 5\n  },\n  selectedDate: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: 20,\n    color: \"white\"\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ccc\",\n    paddingVertical: 8,\n    alignItems: \"center\"\n  },\n  rowCell: {\n    flex: 1,\n    textAlign: \"center\",\n    color: \"black\"\n  },\n  transactionsList: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: \"#333\",\n    borderRadius: 20\n  },\n  pickerContainer: {\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    padding: 5\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: \"white\"\n  },\n  submitButton: {\n    backgroundColor: \"#28a745\",\n    padding: 12,\n    borderRadius: 5,\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  importButton: {\n    backgroundColor: \"#721E5E\",\n    padding: 12,\n    borderRadius: 5,\n    alignItems: \"center\",\n    marginBottom: 10\n  },\n  tableContainer: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: \"#fff\",\n    borderRadius: 10\n  },\n  tableHeader: {\n    flexDirection: \"row\",\n    borderBottomWidth: 2,\n    borderBottomColor: \"#721E5E\"\n  },\n  tableCell: {\n    flex: 1,\n    padding: 10,\n    textAlign: \"center\",\n    color: \"black\"\n  },\n  headerCell: {\n    fontWeight: \"bold\",\n    color: \"#721E5E\"\n  },\n  deleteButton: {\n    padding: 5,\n    backgroundColor: \"#E74C3C\",\n    borderRadius: 5,\n    marginLeft: 5\n  },\n  deleteText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  editButton: {\n    padding: 5,\n    backgroundColor: \"#F39C12\",\n    borderRadius: 5,\n    marginLeft: 5\n  },\n  editText: {\n    color: \"black\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  saveButton: {\n    padding: 5,\n    backgroundColor: \"#27AE60\",\n    borderRadius: 5,\n    marginLeft: 5\n  },\n  saveText: {\n    color: \"black\",\n    fontWeight: \"bold\",\n    fontSize: 16\n  },\n  editInput: {\n    backgroundColor: \"white\",\n    color: \"black\",\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    padding: 10,\n    borderRadius: 5,\n    width: \"40%\",\n    textAlign: \"center\"\n  },\n  datePickerContainer: {\n    marginBottom: 10,\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  datePickerButton: {\n    backgroundColor: \"#fff\",\n    padding: 10,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    width: \"60%\",\n    alignItems: \"center\"\n  },\n  datePickerText: {\n    fontSize: 16,\n    color: \"#721E5E\"\n  },\n  dateText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginVertical: 10,\n    color: \"#fff\",\n    width: \"100%\"\n  },\n  picker: {\n    height: 50,\n    width: 120,\n    color: \"black\",\n    backgroundColor: \"#fff\",\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"#ccc\"\n  },\n  categoryPicker: {\n    backgroundColor: \"#fff\",\n    color: \"black\",\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    paddingHorizontal: 10,\n    height: 50,\n    width: \"100%\",\n    marginBottom: 5\n  }\n});\nexport default TransactionsScreen;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","Alert","FlatList","ScrollView","Picker","AsyncStorage","DocumentPicker","FileSystem","PDFDocument","Papa","moment","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","TransactionsScreen","selectedYear","setSelectedYear","year","selectedMonth","setSelectedMonth","month","selectedDay","setSelectedDay","date","category","setCategory","amount","setAmount","transactions","setTransactions","editIndex","setEditIndex","editCategory","setEditCategory","editAmount","setEditAmount","editDate","setEditDate","forceUpdate","setForceUpdate","selectedFilterCategory","setSelectedFilterCategory","customCategory","setCustomCategory","loggedInEmail","setLoggedInEmail","formatSelectedDate","toString","padStart","fetchEmail","email","getItem","loadTransactions","response","get","status","data","console","error","statusText","deleteTransaction","transactionId","fetch","method","ok","Error","filter","t","id","fetchTransactions","json","log","editTransaction","index","transactionToEdit","saveTransaction","updatedTransaction","parseFloat","headers","body","JSON","stringify","prevTransactions","map","transaction","alert","handleSubmit","finalCategory","newTransaction","user_email","contentContainerStyle","flexGrow","keyboardShouldPersistTaps","children","style","styles","container","title","fileName","_jsxFileName","lineNumber","columnNumber","datePickerContainer","label","flexDirection","selectedValue","onValueChange","val","picker","Array","_","i","Item","value","from","length","day","dateText","itemValue","categoryPicker","input","placeholder","onChangeText","keyboardType","submitButton","onPress","submitText","tableContainer","transactionTitle","includes","keyExtractor","item","renderItem","tableRow","editInput","saveButton","saveText","rowCell","toFixed","editButton","editText","deleteButton","deleteText","create","flex","padding","backgroundColor","fontSize","fontWeight","marginBottom","textAlign","color","dateSelector","justifyContent","dateButton","borderRadius","selectedDate","borderBottomWidth","borderBottomColor","paddingVertical","alignItems","transactionsList","marginTop","pickerContainer","borderWidth","borderColor","importButton","tableHeader","tableCell","headerCell","marginLeft","width","datePickerButton","datePickerText","marginVertical","height","paddingHorizontal"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/screens/TransactionsScreen.js"],"sourcesContent":["import React, { useState , useEffect} from \"react\";\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet, Alert, FlatList, ScrollView } from \"react-native\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport * as DocumentPicker from \"expo-document-picker\";\nimport * as FileSystem from \"expo-file-system\";\nimport { PDFDocument } from \"pdf-lib\";\nimport Papa from \"papaparse\";\nimport moment from \"moment\";\nimport axios from \"axios\"; // Import axios to send API requests\n\n\n\n\nconst TransactionsScreen = () => {\n  const [selectedYear, setSelectedYear] = useState(moment().year());\n  const [selectedMonth, setSelectedMonth] = useState(moment().month() + 1); // Months are 0-indexed in JS\n  const [selectedDay, setSelectedDay] = useState(moment().date());\n  const [category, setCategory] = useState(\"Default\");\n\n  const [amount, setAmount] = useState(\"\");\n  const [transactions, setTransactions] = useState([]);\n  const [editIndex, setEditIndex] = useState(null);\n  const [editCategory, setEditCategory] = useState(\"\");\n  const [editAmount, setEditAmount] = useState(\"\");\n  const [editDate, setEditDate] = useState(\"\"); //  Stores edited date\n  const [forceUpdate, setForceUpdate] = useState(0);\n  const [selectedFilterCategory, setSelectedFilterCategory] = useState(\"\"); // Stores selected category for filtering\n  const [customCategory, setCustomCategory] = useState(\"\"); // Stores manually entered category\nconst [loggedInEmail, setLoggedInEmail] = useState(\"\");\n\n\n\n\n\n\n\n\n  const formatSelectedDate = () => {\n    return `${selectedYear}-${selectedMonth.toString().padStart(2, \"0\")}-${selectedDay.toString().padStart(2, \"0\")}`;\n  };\n  \n\n  useEffect(() => {\n    const fetchEmail = async () => {\n      const email = await AsyncStorage.getItem(\"userEmail\");\n      if (email) {\n        setLoggedInEmail(email);\n      }\n    };\n    fetchEmail();\n  }, []);\n  \n\n\n  //  Load Transactions from AsyncStorage when the screen opens\n  useEffect(() => {\n    if (!loggedInEmail) return;\n\n    const loadTransactions = async () => {\n      try {\n        const response = await axios.get(`https://finix-backend.onrender.com/transactions?email=${loggedInEmail}`);\n        if (response.status === 200) {\n          setTransactions(response.data);\n        } else {\n          console.error(\"Error fetching transactions:\", response.statusText);\n        }\n      } catch (error) {\n        console.error(\"Error fetching transactions:\", error);\n      }\n    };\n\n    loadTransactions();\n  }, [loggedInEmail]);\n  \n  \n\n  // Delete a transaction\n  const deleteTransaction = async (transactionId) => {\n    try {\n      const response = await fetch(`https://finix-backend.onrender.com/delete_transaction/${transactionId}`, { \n        method: \"DELETE\",\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to delete transaction\");\n      }\n\n      setTransactions(transactions.filter((t) => t.id !== transactionId));\n    } catch (error) {\n      console.error(\"Error deleting transaction:\", error);\n    }\n  };\n\n//  Add fetchTransactions function RIGHT HERE (after deleteTransaction)\nconst fetchTransactions = async () => {\n  if (!loggedInEmail) return;\n  try {\n    const response = await fetch(`https://finix-backend.onrender.com/transactions?email=${loggedInEmail}`);\n    const data = await response.json();\n    setTransactions(data);\n  } catch (error) {\n    console.error(\"Error fetching transactions:\", error);\n  }\n};\n\n\n//  Now update useEffect() to fetch transactions when the page loads\nuseEffect(() => {\n  console.log(\"📊 Transactions updated:\", transactions);\n}, [transactions]); // ✅ This logs transactions every time they change\n // ✅ Re-fetch whenever transactions change\n\n\n  // Edit a transaction\n  const editTransaction = (index) => {\n    const transactionToEdit = transactions[index];\n    setEditIndex(index);\n    setEditDate(transactionToEdit.date);\n    setEditCategory(transactionToEdit.category);\n    setEditAmount(transactionToEdit.amount.toString());\n  };\n\n  const saveTransaction = async () => {\n    if (editIndex === null) {\n      console.log(\"❌ No transaction is being edited.\");\n      return;\n    }\n  \n    const updatedTransaction = {\n      id: transactions[editIndex].id, // ✅ Ensure the correct transaction ID is used\n      date: editDate,\n      category: editCategory,\n      amount: parseFloat(editAmount),\n    };\n  \n    console.log(\"📝 Attempting to save transaction:\", updatedTransaction);\n  \n    try {\n      const response = await fetch(`https://finix-backend.onrender.com/update_transaction/${updatedTransaction.id}`, { \n\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(updatedTransaction),\n      });\n  \n      if (!response.ok) {\n        throw new Error(`❌ Failed to update transaction: ${response.status}`);\n      }\n  \n      console.log(\"✅ Transaction successfully updated in backend!\");\n  \n      // ✅ Update frontend state immediately\n      setTransactions((prevTransactions) =>\n        prevTransactions.map((transaction) =>\n          transaction.id === updatedTransaction.id ? updatedTransaction : transaction\n        )\n      );\n  \n      console.log(\"✅ Transactions updated in frontend state:\", transactions);\n  \n      Alert.alert(\"Success\", \"Transaction Updated Successfully!\");\n    } catch (error) {\n      console.error(\"⚠️ Error saving transaction:\", error);\n    }\n  \n    setEditIndex(null);\n  };\n  \n  \n  \n\n  const handleSubmit = async () => {\n    if (!amount || (category === \"Default\" && !customCategory)) {\n      Alert.alert(\"Error\", \"Please enter an amount and select a category.\");\n      return;\n    }\n    \n  \n    const finalCategory = category === \"Other\" ? customCategory : category; // Use custom category if \"Other\" is selected\n  \n    const newTransaction = {\n      date: formatSelectedDate(),\n      category: finalCategory, // Save either selected category or manually entered category\n      amount: parseFloat(amount),\n      user_email: loggedInEmail, \n      \n    };\n    console.log(\"🧾 Submitting Transaction:\", newTransaction);\n\n    try {\n      const response = await fetch(\"https://finix-backend.onrender.com/add_transaction\", { \n\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newTransaction),\n      });\n  \n      if (!response.ok) {\n        throw new Error(\"Failed to add transaction\");\n      }\n  \n      fetchTransactions(); // Refresh transactions after adding\n      Alert.alert(\"Success\", \"Transaction Submitted Successfully!\");\n    } catch (error) {\n      console.error(\"Error saving transaction:\", error);\n    }\n  \n    // Clear inputs\n    setCategory(\"\");\n    setCustomCategory(\"\"); // Clear custom category input\n    setAmount(\"\");\n  };\n  \n  \n\n   \n\n  // Return the UI **(Now inside the component)**\n  console.log(\"Rendering Date Pickers:\", { selectedYear, selectedMonth, selectedDay });\n  return (\n    <ScrollView \n    contentContainerStyle={{ flexGrow: 1 }} \n    keyboardShouldPersistTaps=\"handled\"\n  >\n    <View style={styles.container}>\n      <Text style={styles.title}>Add Transaction</Text>\n      <View style={styles.datePickerContainer}>\n  <Text style={styles.label}></Text>\n\n  <View style={{ flexDirection: \"row\" }}>\n  <Picker selectedValue={selectedYear || moment().year()} onValueChange={(val) => setSelectedYear(val)} style={styles.picker}>\n    {[...Array(10)].map((_, i) => {\n      const year = moment().year() - i;\n      return <Picker.Item key={year} label={year.toString()} value={year} />;\n    })}\n  </Picker>\n\n  <Picker selectedValue={selectedMonth || (moment().month() + 1)} onValueChange={(val) => setSelectedMonth(val)} style={styles.picker}>\n    {Array.from({ length: 12 }, (_, i) => i + 1).map((month) => (\n      <Picker.Item key={month} label={month.toString()} value={month} />\n    ))}\n  </Picker>\n\n  <Picker selectedValue={selectedDay || moment().date()} onValueChange={(val) => setSelectedDay(val)} style={styles.picker}>\n    {Array.from({ length: 31 }, (_, i) => i + 1).map((day) => (\n      <Picker.Item key={day} label={day.toString()} value={day} />\n    ))}\n  </Picker>\n</View>\n\n  \n  {/* Show Selected Date */}\n  <Text style={styles.dateText}>Selected Date: {formatSelectedDate()}</Text>\n</View>\n\n\n\n<Picker\n  selectedValue={category || \"Default\"}\n  onValueChange={(itemValue) => {\n    setCategory(itemValue);\n    if (itemValue !== \"Other\") {\n      setCustomCategory(\"\");\n    }\n  }}\n  style={[styles.picker, styles.categoryPicker]}\n>\n  <Picker.Item label=\"Select a category\" value=\"Default\" />\n  <Picker.Item label=\"Food\" value=\"Food\" />\n  <Picker.Item label=\"Transport\" value=\"Transport\" />\n  <Picker.Item label=\"Entertainment\" value=\"Entertainment\" />\n  <Picker.Item label=\"Other\" value=\"Other\" />\n</Picker>\n\n\n{/* Show TextInput ONLY if \"Other\" is selected */}\n{category === \"Other\" && (\n  <TextInput\n    style={styles.input}\n    placeholder=\"Enter custom category\"\n    value={customCategory}\n    onChangeText={setCustomCategory}\n  />\n)}\n\n\n    \n\n      {/*  Amount Input */}\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter Amount (£)\"\n        keyboardType=\"numeric\"\n        value={amount}\n        onChangeText={setAmount}\n      />\n\n      {/* Submit Button */}\n      <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n        <Text style={styles.submitText}>Submit Transaction</Text>\n      </TouchableOpacity>\n\n      {/* Transactions Table */}\n      {transactions.length > 0 && (\n        <View style={styles.tableContainer}>\n          <Text style={styles.transactionTitle}>Transactions List:</Text>\n      \n          <Picker\n  selectedValue={selectedFilterCategory}\n  onValueChange={(itemValue) => setSelectedFilterCategory(itemValue)}\n  style={[styles.picker, styles.categoryPicker]}\n>\n  <Picker.Item label=\"All Categories\" value=\"\" />\n  <Picker.Item label=\"Food\" value=\"Food\" />\n  <Picker.Item label=\"Transport\" value=\"Transport\" />\n  <Picker.Item label=\"Entertainment\" value=\"Entertainment\" />\n  <Picker.Item label=\"Other\" value=\"Other\" /> {/* NEW ADDITION */}\n</Picker>\n\n\n\n          <FlatList\n  data={selectedFilterCategory \n    ? transactions.filter(t => \n        selectedFilterCategory === \"Other\" \n          ? ![\"Food\", \"Transport\", \"Entertainment\"].includes(t.category) // Show non-default categories\n          : t.category === selectedFilterCategory\n      ) \n    : transactions}\n  \n            keyExtractor={(item, index) => index.toString()}\n            renderItem={({ item, index }) => (\n              <View style={styles.tableRow}>\n                {editIndex === index ? (\n                  <>\n                    {/*  Editable Inputs */}\n                    <View style={{ flexDirection: \"row\" }}>\n  <Picker selectedValue={selectedYear} onValueChange={(val) => setSelectedYear(val)} style={styles.picker}>\n    {[...Array(10)].map((_, i) => {\n      const year = moment().year() - i;\n      return <Picker.Item key={year} label={year.toString()} value={year} />;\n    })}\n  </Picker>\n  <Picker selectedValue={selectedMonth} onValueChange={(val) => setSelectedMonth(val)} style={styles.picker}>\n    {Array.from({ length: 12 }, (_, i) => i + 1).map((month) => (\n      <Picker.Item key={month} label={month.toString()} value={month} />\n    ))}\n  </Picker>\n  <Picker selectedValue={selectedDay} onValueChange={(val) => setSelectedDay(val)} style={styles.picker}>\n    {Array.from({ length: 31 }, (_, i) => i + 1).map((day) => (\n      <Picker.Item key={day} label={day.toString()} value={day} />\n    ))}\n  </Picker>\n</View>\n\n                    <TextInput \n                    style={styles.editInput} \n                    value={editCategory} \n                    onChangeText={setEditCategory} \n                    />\n                    <TextInput \n                    style={styles.editInput} \n                    value={editAmount}\n                    onChangeText={setEditAmount} \n                    keyboardType=\"numeric\" \n                    />\n\n                    {/* Save Button */}\n                    <TouchableOpacity onPress={saveTransaction} style={styles.saveButton}>\n                      <Text style={styles.saveText}>✔️</Text>\n                    </TouchableOpacity>\n                  </>\n                ) : (\n                  <>\n                    <Text style={styles.rowCell}>{item.date}</Text>\n                    <Text style={styles.rowCell}>{item.category}</Text>\n                    <Text style={styles.rowCell}>£{item.amount.toFixed(2)}</Text>\n\n                    {/* Edit Button */}\n                    <TouchableOpacity onPress={() => editTransaction(index)} style={styles.editButton}>\n                      <Text style={styles.editText}>✏️</Text>\n                    </TouchableOpacity>\n\n\n                    {/* Delete Button */}\n                    <TouchableOpacity onPress={() => deleteTransaction(item.id)} style={styles.deleteButton}>\n                      <Text style={styles.deleteText}>🗑️</Text>\n                    </TouchableOpacity>\n\n              \n\n                  </>\n                )}\n              </View>\n            )}\n          />\n        </View>\n      )}\n    </View>\n    </ScrollView>\n  );\n};\n\n// Export the component at the bottom\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: \"#8E241F\",\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    textAlign: \"center\",\n    color: \"white\",\n  },\n  dateSelector: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    marginBottom: 10,\n  },\n  dateButton: {\n    padding: 10,\n    backgroundColor: \"#ddd\",\n    borderRadius: 5,\n  },\n  selectedDate: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: 20,\n    color: \"white\",\n  },\n  tableRow: {\n    flexDirection: \"row\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#ccc\",\n    paddingVertical: 8,\n    alignItems: \"center\",\n  },\n  \n  rowCell: {\n    flex: 1,  // Ensures each column has equal width\n    textAlign: \"center\",\n    color: \"black\",\n  },\n  \n  transactionsList: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: \"#333\",\n    borderRadius: 20,\n  },\n  pickerContainer: {\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    padding: 5,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    color: \"white\",\n  },\n  submitButton: {\n    backgroundColor: \"#28a745\",\n    padding: 12,\n    borderRadius: 5,\n    alignItems: \"center\",\n    marginBottom: 10,\n  },\n  importButton: {\n    backgroundColor: \"#721E5E\",\n    padding: 12,\n    borderRadius: 5,\n    alignItems: \"center\",\n    marginBottom: 10,\n  },\n  tableContainer: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: \"#fff\",\n    borderRadius: 10,\n  },\n  tableHeader: {\n    flexDirection: \"row\",\n    borderBottomWidth: 2,\n    borderBottomColor: \"#721E5E\",\n  },\n  tableCell: {\n    flex: 1,\n    padding: 10,\n    textAlign: \"center\",\n    color: \"black\",\n  },\n  headerCell: {\n    fontWeight: \"bold\",\n    color: \"#721E5E\",\n  },\n  deleteButton: {\n    padding: 5,\n    backgroundColor: \"#E74C3C\",  // Red background for delete\n    borderRadius: 5,\n    marginLeft: 5,\n  },\n  deleteText: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n  editButton: {\n    padding: 5,\n    backgroundColor: \"#F39C12\", // Orange color for edit\n    borderRadius: 5,\n    marginLeft: 5,\n  },\n  editText: {\n    color: \"black\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n  saveButton: {\n    padding: 5,\n    backgroundColor: \"#27AE60\", // Green color for save\n    borderRadius: 5,\n    marginLeft: 5,\n  },\n  saveText: {\n    color: \"black\",\n    fontWeight: \"bold\",\n    fontSize: 16,\n  },\n  editInput: {\n    backgroundColor: \"white\",  // White background\n    color: \"black\",  //  Ensure text is black (visible)\n    borderWidth: 1,  //  Add a border for visibility\n    borderColor: \"#ccc\",  //  Light border for better contrast\n    padding: 10,\n    borderRadius: 5,\n    width: \"40%\",  // Adjust width so it doesn’t take up too much space\n    textAlign: \"center\",  // Keep text centered for neat appearance\n  },\n  datePickerContainer: {\n    marginBottom: 10,\n    alignItems: \"center\",\n    width: \"100%\",\n  },\n  \n  datePickerButton: {\n    backgroundColor: \"#fff\",\n    padding: 10,\n    borderRadius: 5,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    width: \"60%\",\n    alignItems: \"center\",\n  },\n  \n  datePickerText: {\n    fontSize: 16,\n    color: \"#721E5E\",\n  },\n  dateText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginVertical: 10,\n    color: \"#fff\",\n    width: \"100%\", \n  },\n  picker: {\n    height: 50,\n    width: 120,  //  Increased width for visibility\n    color: \"black\",  //  Ensure text is visible\n    backgroundColor: \"#fff\",  //  Make dropdown visible\n    borderRadius: 5,\n    borderWidth: 1,  // Add a border for visibility\n    borderColor: \"#ccc\",\n  },\n  categoryPicker: {\n    backgroundColor: \"#fff\", // White background\n    color: \"black\", //  Black text\n    borderRadius: 5, //  Rounded corners\n    borderWidth: 1, //  Add border\n    borderColor: \"#ccc\", //  Light border\n    paddingHorizontal: 10, //  Padding\n    height: 50, // Set height\n    width: \"100%\",\n    marginBottom: 5,\n  },\n  \n  \n});\n\nexport default TransactionsScreen;"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}