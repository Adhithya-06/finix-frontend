{"ast":null,"code":"var _jsxFileName = \"/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/screens/DashboardScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Picker } from '@react-native-picker/picker';\nimport { PieChart, ProgressChart, LineChart } from 'react-native-chart-kit';\nimport { TransactionContext } from \"../context/TransactionContext\";\nimport { useContext } from \"react\";\nimport { useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from \"axios\";\nimport { useFocusEffect } from '@react-navigation/native';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst screenWidth = Dimensions.get('window').width;\nconst categoryHierarchy = {\n  Food: [\"Groceries\", \"Restaurants\", \"Cafes\"],\n  Transport: [\"Fuel\", \"Public Transport\", \"Taxi\"],\n  Entertainment: [\"Movies\", \"Concerts\", \"Games\"]\n};\nconst DashboardScreen = () => {\n  const [selectedPeriod, setSelectedPeriod] = useState('Monthly');\n  const handleTouch = event => {\n    const {\n      locationX,\n      locationY\n    } = event.nativeEvent;\n    setTooltip({\n      visible: true,\n      x: locationX,\n      y: locationY,\n      category: \"Category Clicked\"\n    });\n    setTimeout(() => setTooltip({\n      visible: false,\n      x: 0,\n      y: 0,\n      category: \"\"\n    }), 2000);\n  };\n  const calculateSpendingData = () => {\n    let now = new Date();\n    let weeklyTotal = 0,\n      monthlyTotal = 0,\n      yearlyTotal = 0;\n    const monday = new Date(now);\n    monday.setDate(now.getDate() - (now.getDay() + 6) % 7);\n    monday.setHours(0, 0, 0, 0);\n    const sunday = new Date(monday);\n    sunday.setDate(monday.getDate() + 6);\n    sunday.setHours(23, 59, 59, 999);\n    const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n    const yearStart = new Date(now.getFullYear(), 0, 1);\n    transactions.forEach(transaction => {\n      const txDate = new Date(transaction.date);\n      if (txDate >= monday && txDate <= sunday) weeklyTotal += transaction.amount;\n      if (txDate >= monthStart) monthlyTotal += transaction.amount;\n      if (txDate >= yearStart) yearlyTotal += transaction.amount;\n    });\n    return {\n      Weekly: parseFloat(weeklyTotal.toFixed(2)),\n      Monthly: parseFloat(monthlyTotal.toFixed(2)),\n      Yearly: parseFloat(yearlyTotal.toFixed(2))\n    };\n  };\n  const [transactions, setTransactions] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [subcategories, setSubcategories] = useState({});\n  const [drillDownCategory, setDrillDownCategory] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [tooltip, setTooltip] = useState({\n    visible: false,\n    x: 0,\n    y: 0,\n    category: \"\"\n  });\n  const [goal, setGoal] = useState({\n    description: \"\",\n    targetAmount: 0,\n    savedAmount: 0\n  });\n  const fetchGoal = async () => {\n    try {\n      const storedGoal = await AsyncStorage.getItem(\"userGoal\");\n      if (storedGoal) {\n        setGoal(JSON.parse(storedGoal));\n      }\n    } catch (error) {\n      console.error(\"Error fetching goal:\", error);\n    }\n  };\n  useFocusEffect(React.useCallback(() => {\n    fetchTransactions();\n    fetchGoal();\n  }, []));\n  const fetchTransactions = async () => {\n    try {\n      const response = await axios.get(\"https://finix-backend.onrender.com/transactions\");\n      setTransactions(response.data);\n    } catch (error) {\n      console.error(\"Error fetching transactions:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchTransactions();\n    const loadGoalData = async () => {\n      try {\n        const storedGoal = await AsyncStorage.getItem(\"userGoal\");\n        if (storedGoal) {\n          setGoal(JSON.parse(storedGoal));\n        }\n      } catch (error) {\n        console.error(\"Error fetching goal data:\", error);\n      }\n    };\n    loadGoalData();\n  }, []);\n  const spendingData = calculateSpendingData();\n  const getSummaryText = () => {\n    const amount = spendingData[selectedPeriod];\n    if (selectedPeriod === \"Weekly\") {\n      if (amount < 300) return \"You're managing your weekly budget well! 🎯\";\n      if (amount < 1000) return \"Watch your expenses this week! 💰\";\n      return \"Careful! You're spending a lot this week. ⚠️\";\n    }\n    if (selectedPeriod === \"Monthly\") {\n      if (amount < 1500) return \"You're on track with your monthly spending! 👍\";\n      if (amount < 5000) return \"Your expenses are moderate. Keep tracking! 👀\";\n      return \"You're nearing your monthly limit. Be mindful! 🚨\";\n    }\n    if (selectedPeriod === \"Yearly\") {\n      if (amount < 12000) return \"Your yearly spending is balanced! ✅\";\n      if (amount < 30000) return \"You're spending consistently. Keep tracking. 📊\";\n      return \"Your expenses are high this year. Consider adjusting! ⚠️\";\n    }\n  };\n  const categoryTotals = transactions.reduce((acc, transaction) => {\n    let parentCategory = Object.keys(categoryHierarchy).find(parent => categoryHierarchy[parent].includes(transaction.category)) || transaction.category;\n    if (!acc[parentCategory]) {\n      acc[parentCategory] = {\n        total: 0,\n        subcategories: {}\n      };\n    }\n    acc[parentCategory].total += transaction.amount;\n    if (parentCategory !== transaction.category) {\n      if (!acc[parentCategory].subcategories[transaction.category]) {\n        acc[parentCategory].subcategories[transaction.category] = 0;\n      }\n      acc[parentCategory].subcategories[transaction.category] += transaction.amount;\n    }\n    return acc;\n  }, {});\n  const drillDownData = {\n    Food: {\n      Restaurants: 60,\n      Groceries: 40\n    },\n    Transport: {\n      Fuel: 50,\n      PublicTransport: 50\n    },\n    Entertainment: {\n      Movies: 40,\n      Concerts: 60\n    }\n  };\n  const categoryColors = [\"#381E72\", \"#6A721E\", \"#721E5E\", \"#E74C3C\", \"#2ECC71\", \"#F39C12\", \"#9B59B6\", \"#3498DB\", \"#1ABC9C\", \"#D35400\"];\n  const pieData = drillDownCategory ? Object.keys(drillDownData[drillDownCategory]).map((sub, index) => ({\n    name: sub,\n    amount: drillDownData[drillDownCategory][sub],\n    color: categoryColors[index % categoryColors.length],\n    legendFontColor: \"#fff\",\n    legendFontSize: 12\n  })) : Object.keys(categoryTotals).map((category, index) => ({\n    name: category,\n    amount: parseFloat(categoryTotals[category].total.toFixed(2)),\n    color: categoryColors[index % categoryColors.length],\n    legendFontColor: \"#fff\",\n    legendFontSize: 12\n  }));\n  const handlePiePress = index => {\n    const clickedCategory = pieData[index].name;\n    console.log(\"Category Clicked:\", clickedCategory);\n    setSelectedCategory(clickedCategory);\n    setModalVisible(true);\n  };\n  const progressData = {\n    labels: [\"Goal\"],\n    data: [goal.targetAmount > 0 ? goal.savedAmount / goal.targetAmount : 0]\n  };\n  const getKpiChartData = () => {\n    const groupedData = {};\n    transactions.forEach(transaction => {\n      const date = new Date(transaction.date);\n      const monthYear = `${date.getMonth() + 1}-${date.getFullYear()}`;\n      if (!groupedData[monthYear]) {\n        groupedData[monthYear] = 0;\n      }\n      groupedData[monthYear] += transaction.amount;\n    });\n    const sortedKeys = Object.keys(groupedData).sort((a, b) => {\n      const [aMonth, aYear] = a.split('-').map(Number);\n      const [bMonth, bYear] = b.split('-').map(Number);\n      return new Date(aYear, aMonth - 1) - new Date(bYear, bMonth - 1);\n    });\n    return {\n      labels: sortedKeys.map(key => {\n        const [month] = key.split('-');\n        return new Date(0, month - 1).toLocaleString('default', {\n          month: 'short'\n        });\n      }),\n      datasets: [{\n        data: sortedKeys.map(key => parseFloat(groupedData[key].toFixed(2))),\n        color: (opacity = 1) => `rgba(255, 99, 132, ${opacity})`,\n        strokeWidth: 2\n      }]\n    };\n  };\n  const kpiData = getKpiChartData();\n  return _jsxDEV(ScrollView, {\n    contentContainerStyle: styles.container,\n    children: [_jsxDEV(View, {\n      style: styles.totalSpendingContainer,\n      children: [_jsxDEV(Text, {\n        style: styles.totalSpendingText,\n        children: [\"\\xA3\", spendingData[selectedPeriod]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this), _jsxDEV(Text, {\n        style: styles.totalSpendingTitle,\n        children: \"Total Money Spent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), _jsxDEV(View, {\n        style: styles.pickerContainer,\n        children: _jsxDEV(Picker, {\n          selectedValue: selectedPeriod,\n          onValueChange: itemValue => setSelectedPeriod(itemValue),\n          style: styles.picker,\n          children: [_jsxDEV(Picker.Item, {\n            label: \"Weekly\",\n            value: \"Weekly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), _jsxDEV(Picker.Item, {\n            label: \"Monthly\",\n            value: \"Monthly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), _jsxDEV(Picker.Item, {\n            label: \"Yearly\",\n            value: \"Yearly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.chartsRow,\n      children: [_jsxDEV(View, {\n        style: styles.chartBox,\n        children: [_jsxDEV(Text, {\n          style: styles.chartTitle,\n          children: drillDownCategory ? `Breakdown of ${drillDownCategory}` : \"Spending by Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 5\n        }, this), drillDownCategory && _jsxDEV(TouchableOpacity, {\n          style: styles.backButton,\n          onPress: () => setDrillDownCategory(null),\n          children: _jsxDEV(Text, {\n            style: styles.backButtonText,\n            children: \"\\u2190 Back to Categories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 9\n        }, this), _jsxDEV(View, {\n          style: {\n            position: 'relative'\n          },\n          children: _jsxDEV(TouchableOpacity, {\n            onPress: handleTouch,\n            activeOpacity: 1,\n            children: _jsxDEV(PieChart, {\n              data: pieData,\n              width: screenWidth * 0.32,\n              height: 180,\n              chartConfig: chartConfig,\n              accessor: \"amount\",\n              backgroundColor: \"transparent\",\n              paddingLeft: \"15\",\n              absolute: true,\n              onDataPointClick: ({\n                index\n              }) => handlePiePress(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }, this), _jsxDEV(View, {\n        style: styles.chartBox,\n        children: [_jsxDEV(Text, {\n          style: styles.chartTitle,\n          children: \"Goal Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this), _jsxDEV(ProgressChart, {\n          data: progressData,\n          width: screenWidth * 0.3,\n          height: 180,\n          strokeWidth: 16,\n          radius: 50,\n          chartConfig: goalChartConfig,\n          hideLegend: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this), _jsxDEV(View, {\n        style: styles.chartBox,\n        children: [_jsxDEV(Text, {\n          style: styles.chartTitle,\n          children: \"KPI Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this), _jsxDEV(LineChart, {\n          data: kpiData,\n          width: screenWidth * 0.27,\n          height: 180,\n          chartConfig: chartConfig,\n          bezier: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this), _jsxDEV(View, {\n      style: styles.summaryContainer,\n      children: _jsxDEV(Text, {\n        style: styles.summaryText,\n        children: getSummaryText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 9\n  }, this);\n};\nconst chartConfig = {\n  backgroundGradientFrom: \"#8E241F\",\n  backgroundGradientTo: \"#8E241F\",\n  color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  decimalPlaces: 2\n};\nconst goalChartConfig = {\n  backgroundGradientFrom: \"#8E241F\",\n  backgroundGradientTo: \"#8E241F\",\n  color: (opacity = 1) => `rgba(46, 204, 113, ${opacity})`,\n  labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n  strokeWidth: 16,\n  radius: 55,\n  backgroundColor: \"transparent\",\n  useShadowColorFromDataset: false\n};\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    alignItems: 'center',\n    paddingVertical: 20,\n    backgroundColor: '#8E241F'\n  },\n  backButton: {\n    marginTop: 10,\n    padding: 8,\n    backgroundColor: \"#fff\",\n    borderRadius: 5,\n    alignSelf: \"center\"\n  },\n  backButtonText: {\n    color: \"#721E5E\",\n    fontWeight: \"bold\"\n  },\n  totalSpendingContainer: {\n    backgroundColor: '#AE1C1A',\n    padding: 25,\n    borderRadius: 10,\n    marginBottom: 100,\n    width: '90%',\n    alignItems: 'center'\n  },\n  totalSpendingText: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  totalSpendingTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  pickerContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 5,\n    width: '60%',\n    marginTop: 10\n  },\n  picker: {\n    height: 40,\n    color: '#721E5E'\n  },\n  chartTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#fff',\n    textAlign: 'center',\n    marginBottom: 10\n  },\n  summaryContainer: {\n    marginTop: 80,\n    marginBottom: 50,\n    backgroundColor: '#fff',\n    padding: 10,\n    borderRadius: 10,\n    width: '90%',\n    alignItems: 'center'\n  },\n  summaryText: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#721E5E'\n  },\n  chartsRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    width: '90%'\n  },\n  chartBox: {\n    backgroundColor: '#AE1C1A',\n    padding: 10,\n    borderRadius: 10,\n    alignItems: 'center',\n    width: '30%'\n  },\n  goalInfo: {\n    marginTop: 10,\n    padding: 10,\n    backgroundColor: \"#AE1C1A\",\n    borderRadius: 10,\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  goalText: {\n    fontSize: 16,\n    color: \"#333\",\n    marginVertical: 3\n  }\n});\nexport default DashboardScreen;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","ScrollView","Dimensions","Picker","PieChart","ProgressChart","LineChart","TransactionContext","useContext","useEffect","AsyncStorage","axios","useFocusEffect","TouchableOpacity","jsxDEV","_jsxDEV","screenWidth","get","width","categoryHierarchy","Food","Transport","Entertainment","DashboardScreen","selectedPeriod","setSelectedPeriod","handleTouch","event","locationX","locationY","nativeEvent","setTooltip","visible","x","y","category","setTimeout","calculateSpendingData","now","Date","weeklyTotal","monthlyTotal","yearlyTotal","monday","setDate","getDate","getDay","setHours","sunday","monthStart","getFullYear","getMonth","yearStart","transactions","forEach","transaction","txDate","date","amount","Weekly","parseFloat","toFixed","Monthly","Yearly","setTransactions","selectedCategory","setSelectedCategory","subcategories","setSubcategories","drillDownCategory","setDrillDownCategory","modalVisible","setModalVisible","tooltip","goal","setGoal","description","targetAmount","savedAmount","fetchGoal","storedGoal","getItem","JSON","parse","error","console","useCallback","fetchTransactions","response","data","loadGoalData","spendingData","getSummaryText","categoryTotals","reduce","acc","parentCategory","Object","keys","find","parent","includes","total","drillDownData","Restaurants","Groceries","Fuel","PublicTransport","Movies","Concerts","categoryColors","pieData","map","sub","index","name","color","length","legendFontColor","legendFontSize","handlePiePress","clickedCategory","log","progressData","labels","getKpiChartData","groupedData","monthYear","sortedKeys","sort","a","b","aMonth","aYear","split","Number","bMonth","bYear","key","month","toLocaleString","datasets","opacity","strokeWidth","kpiData","contentContainerStyle","styles","container","children","style","totalSpendingContainer","totalSpendingText","fileName","_jsxFileName","lineNumber","columnNumber","totalSpendingTitle","pickerContainer","selectedValue","onValueChange","itemValue","picker","Item","label","value","chartsRow","chartBox","chartTitle","backButton","onPress","backButtonText","position","activeOpacity","height","chartConfig","accessor","backgroundColor","paddingLeft","absolute","onDataPointClick","radius","goalChartConfig","hideLegend","bezier","summaryContainer","summaryText","backgroundGradientFrom","backgroundGradientTo","labelColor","decimalPlaces","useShadowColorFromDataset","create","flexGrow","alignItems","paddingVertical","marginTop","padding","borderRadius","alignSelf","fontWeight","marginBottom","fontSize","textAlign","flexDirection","justifyContent","goalInfo","goalText","marginVertical"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/screens/DashboardScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, ScrollView, Dimensions } from 'react-native';\nimport { Picker } from '@react-native-picker/picker'; // Import Picker for drop-down\nimport { PieChart, ProgressChart, LineChart } from 'react-native-chart-kit';\nimport { TransactionContext } from \"../context/TransactionContext\";\nimport { useContext } from \"react\";\nimport { useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport axios from \"axios\";\nimport { useFocusEffect } from '@react-navigation/native'; \nimport { TouchableOpacity } from 'react-native';\n\n\nconst screenWidth = Dimensions.get('window').width;\nconst categoryHierarchy = {\n    Food: [\"Groceries\", \"Restaurants\", \"Cafes\"],\n    Transport: [\"Fuel\", \"Public Transport\", \"Taxi\"],\n    Entertainment: [\"Movies\", \"Concerts\", \"Games\"]\n};\n\n\nconst DashboardScreen = () => {\n    const [selectedPeriod, setSelectedPeriod] = useState('Monthly'); // Default: Monthly\n    \n    const handleTouch = (event) => {\n        const { locationX, locationY } = event.nativeEvent;\n        setTooltip({ visible: true, x: locationX, y: locationY, category: \"Category Clicked\" });\n    \n        setTimeout(() => setTooltip({ visible: false, x: 0, y: 0, category: \"\" }), 2000); // Hide tooltip after 2 sec\n    };\n    \n    const calculateSpendingData = () => {\n        let now = new Date();\n        let weeklyTotal = 0, monthlyTotal = 0, yearlyTotal = 0;\n    \n        // Calculate start and end of current week\n        const monday = new Date(now);\n        monday.setDate(now.getDate() - ((now.getDay() + 6) % 7));\n        monday.setHours(0, 0, 0, 0);\n    \n        const sunday = new Date(monday);\n        sunday.setDate(monday.getDate() + 6);\n        sunday.setHours(23, 59, 59, 999);\n    \n        // Start of month and year\n        const monthStart = new Date(now.getFullYear(), now.getMonth(), 1);\n        const yearStart = new Date(now.getFullYear(), 0, 1);\n    \n        transactions.forEach((transaction) => {\n            const txDate = new Date(transaction.date);\n    \n            if (txDate >= monday && txDate <= sunday) weeklyTotal += transaction.amount;\n            if (txDate >= monthStart) monthlyTotal += transaction.amount;\n            if (txDate >= yearStart) yearlyTotal += transaction.amount;\n        });\n    \n        return {\n            Weekly: parseFloat(weeklyTotal.toFixed(2)),\n            Monthly: parseFloat(monthlyTotal.toFixed(2)),\n            Yearly: parseFloat(yearlyTotal.toFixed(2)),\n        };\n    };\n    \n\nconst [transactions, setTransactions] = useState([]); // Store transactions from API\nconst [selectedCategory, setSelectedCategory] = useState(null); // Tracks selected slice\nconst [subcategories, setSubcategories] = useState({}); // Stores drill-down subcategories\nconst [drillDownCategory, setDrillDownCategory] = useState(null); // Tracks which category is expanded\nconst [modalVisible, setModalVisible] = useState(false);\nconst [tooltip, setTooltip] = useState({ visible: false, x: 0, y: 0, category: \"\" });\n// ✅ Fetch Goal Data from AsyncStorage\nconst [goal, setGoal] = useState({ description: \"\", targetAmount: 0, savedAmount: 0 });\n\n\n\n\nconst fetchGoal = async () => {\n    try {\n        const storedGoal = await AsyncStorage.getItem(\"userGoal\");\n        if (storedGoal) {\n            setGoal(JSON.parse(storedGoal));\n        }\n    } catch (error) {\n        console.error(\"Error fetching goal:\", error);\n    }\n};\n\n// ✅ Ensure Goal Updates When Dashboard Opens\nuseFocusEffect(\n    React.useCallback(() => {\n        fetchTransactions(); // Fetch transactions\n        fetchGoal(); // Fetch latest goal progress\n    }, [])\n);\n\n\n\nconst fetchTransactions = async () => {\n    try {\n        const response = await axios.get(\"https://finix-backend.onrender.com/transactions\");\n        setTransactions(response.data); //  Update state with latest transactions\n    } catch (error) {\n        console.error(\"Error fetching transactions:\", error);\n    }\n};\n\n//  Fetch transactions when Dashboard loads\nuseEffect(() => {\n    fetchTransactions();\n    \n    // Fetch Goal Data from AsyncStorage\n    const loadGoalData = async () => {\n        try {\n            const storedGoal = await AsyncStorage.getItem(\"userGoal\");\n            if (storedGoal) {\n                setGoal(JSON.parse(storedGoal));\n            }\n        } catch (error) {\n            console.error(\"Error fetching goal data:\", error);\n        }\n    };\n\n    loadGoalData();\n}, []);\n\n\n\nconst spendingData = calculateSpendingData(); // Dynamic spending data\n\n    // Updated Function to generate practical summary text\n    const getSummaryText = () => {\n        const amount = spendingData[selectedPeriod];\n\n        if (selectedPeriod === \"Weekly\") {\n            if (amount < 300) return \"You're managing your weekly budget well! 🎯\";\n            if (amount < 1000) return \"Watch your expenses this week! 💰\";\n            return \"Careful! You're spending a lot this week. ⚠️\";\n        }\n\n        if (selectedPeriod === \"Monthly\") {\n            if (amount < 1500) return \"You're on track with your monthly spending! 👍\";\n            if (amount < 5000) return \"Your expenses are moderate. Keep tracking! 👀\";\n            return \"You're nearing your monthly limit. Be mindful! 🚨\";\n        }\n\n        if (selectedPeriod === \"Yearly\") {\n            if (amount < 12000) return \"Your yearly spending is balanced! ✅\";\n            if (amount < 30000) return \"You're spending consistently. Keep tracking. 📊\";\n            return \"Your expenses are high this year. Consider adjusting! ⚠️\";\n        }\n    };\n\n    // Sample data for Pie Chart (Spending by Category)\n   //  Dynamically calculate spending per category\n // Dynamically group subcategories under main categories\nconst categoryTotals = transactions.reduce((acc, transaction) => {\n    // Find parent category or keep it as is if no parent exists\n    let parentCategory = Object.keys(categoryHierarchy).find(parent =>\n        categoryHierarchy[parent].includes(transaction.category)\n    ) || transaction.category;\n\n    if (!acc[parentCategory]) {\n        acc[parentCategory] = { total: 0, subcategories: {} };\n    }\n\n    // Add transaction to parent category\n    acc[parentCategory].total += transaction.amount;\n\n    // Add to subcategories\n    if (parentCategory !== transaction.category) {\n        if (!acc[parentCategory].subcategories[transaction.category]) {\n            acc[parentCategory].subcategories[transaction.category] = 0;\n        }\n        acc[parentCategory].subcategories[transaction.category] += transaction.amount;\n    }\n\n    return acc;\n}, {});\n\n\n\n// Define subcategories for drill-down\nconst drillDownData = {\n    Food: { Restaurants: 60, Groceries: 40 },\n    Transport: { Fuel: 50, PublicTransport: 50 },\n    Entertainment: { Movies: 40, Concerts: 60 }\n};\n\n\nconst categoryColors = [\"#381E72\", \"#6A721E\", \"#721E5E\", \"#E74C3C\", \"#2ECC71\" , \"#F39C12\", \"#9B59B6\", \"#3498DB\", \"#1ABC9C\", \"#D35400\"]; // Default colors\n\nconst pieData = drillDownCategory\n    ? Object.keys(drillDownData[drillDownCategory]).map((sub, index) => ({\n        name: sub,\n        amount: drillDownData[drillDownCategory][sub],\n        color: categoryColors[index % categoryColors.length], \n        legendFontColor: \"#fff\",\n        legendFontSize: 12,\n    }))\n    : Object.keys(categoryTotals).map((category, index) => ({\n        name: category,\n        amount: parseFloat(categoryTotals[category].total.toFixed(2)),\n        color: categoryColors[index % categoryColors.length],\n        legendFontColor: \"#fff\",\n        legendFontSize: 12,\n    }))\n    \n\n\n\n\n\n    const handlePiePress = (index) => {\n        const clickedCategory = pieData[index].name;\n        console.log(\"Category Clicked:\", clickedCategory); // Debugging log\n        setSelectedCategory(clickedCategory);\n        setModalVisible(true);\n    };\n    \n\n    \n\n\n\n    // Sample data for Goal Progress Chart (Donut Chart)\n    const progressData = {\n        labels: [\"Goal\"],\n        data: [goal.targetAmount > 0 ? goal.savedAmount / goal.targetAmount : 0], // ✅ Dynamic Progress\n    };\n    \n\n    const getKpiChartData = () => {\n        // Group by week number or month\n        const groupedData = {};\n    \n        transactions.forEach((transaction) => {\n            const date = new Date(transaction.date);\n            const monthYear = `${date.getMonth() + 1}-${date.getFullYear()}`; // e.g., \"3-2025\"\n    \n            if (!groupedData[monthYear]) {\n                groupedData[monthYear] = 0;\n            }\n            groupedData[monthYear] += transaction.amount;\n        });\n    \n        const sortedKeys = Object.keys(groupedData).sort((a, b) => {\n            const [aMonth, aYear] = a.split('-').map(Number);\n            const [bMonth, bYear] = b.split('-').map(Number);\n            return new Date(aYear, aMonth - 1) - new Date(bYear, bMonth - 1);\n        });\n    \n        return {\n            labels: sortedKeys.map(key => {\n                const [month] = key.split('-');\n                return new Date(0, month - 1).toLocaleString('default', { month: 'short' }); // \"Jan\", \"Feb\" etc.\n            }),\n            datasets: [{\n                data: sortedKeys.map(key => parseFloat(groupedData[key].toFixed(2))),\n                color: (opacity = 1) => `rgba(255, 99, 132, ${opacity})`,\n                strokeWidth: 2\n            }]\n        };\n    };\n    \n    const kpiData = getKpiChartData(); // Replace static kpiData\n    \n\n    return (\n        <ScrollView contentContainerStyle={styles.container}>\n            {/* Total Spending + Drop-down Menu */}\n            <View style={styles.totalSpendingContainer}>\n                <Text style={styles.totalSpendingText}>£{spendingData[selectedPeriod]}</Text>\n                <Text style={styles.totalSpendingTitle}>Total Money Spent</Text>\n\n                {/*  Drop-down Menu for Period Selection */}\n                <View style={styles.pickerContainer}>\n                    <Picker\n                        selectedValue={selectedPeriod}\n                        onValueChange={(itemValue) => setSelectedPeriod(itemValue)}\n                        style={styles.picker}\n                    >\n                        <Picker.Item label=\"Weekly\" value=\"Weekly\" />\n                        <Picker.Item label=\"Monthly\" value=\"Monthly\" />\n                        <Picker.Item label=\"Yearly\" value=\"Yearly\" />\n                    </Picker>\n                </View>\n            </View>\n\n            {/* Charts in a Row Format */}\n            <View style={styles.chartsRow}>\n                {/* Pie Chart (Spending by Category) */}\n  \n                <View style={styles.chartBox}>\n    <Text style={styles.chartTitle}>\n        {drillDownCategory ? `Breakdown of ${drillDownCategory}` : \"Spending by Category\"}\n    </Text>\n\n    {/* Back button to go to main categories */}\n    {drillDownCategory && (\n        <TouchableOpacity \n            style={styles.backButton} \n            onPress={() => setDrillDownCategory(null)}\n        >\n            <Text style={styles.backButtonText}>← Back to Categories</Text>\n        </TouchableOpacity>\n    )}\n\n    {/* Touchable Pie Chart */}\n    <View style={{ position: 'relative' }}>\n    <TouchableOpacity onPress={handleTouch} activeOpacity={1}>\n        <PieChart\n            data={pieData}\n            width={screenWidth * 0.32}  \n            height={180}\n            chartConfig={chartConfig}\n            accessor={\"amount\"}\n            backgroundColor={\"transparent\"}  \n            paddingLeft={\"15\"}\n            absolute\n            onDataPointClick={({ index }) => handlePiePress(index)}  \n        />\n    </TouchableOpacity>\n</View>\n</View>\n\n\n                {/* Goal Progress (Donut Chart with Colors) */}\n                <View style={styles.chartBox}>\n                    <Text style={styles.chartTitle}>Goal Progress</Text>\n                    <ProgressChart\n                        data={progressData}\n                        width={screenWidth * 0.3}  \n                        height={180}\n                        strokeWidth={16}\n                        radius={50}\n                        chartConfig={goalChartConfig} \n                        hideLegend={false}\n                    />\n                     {/* ✅ Display Goal Details Below the Chart */}\n   \n                </View>\n\n                {/* KPI Trend (Line Chart) */}\n                <View style={styles.chartBox}>\n                    <Text style={styles.chartTitle}>KPI Trend</Text>\n                    <LineChart\n                        data={kpiData}\n                        width={screenWidth * 0.27}  \n                        height={180}\n                        chartConfig={chartConfig}\n                        bezier\n                    />\n                </View>\n            </View>\n\n            {/* Quick Summary Text (Moved to Bottom) */}\n            <View style={styles.summaryContainer}>\n                <Text style={styles.summaryText}>{getSummaryText()}</Text>\n            </View>\n\n        </ScrollView>\n        \n    );\n    \n    \n};\n\n// **General Chart Configurations (for Pie & Line Charts)**\nconst chartConfig = {\n    backgroundGradientFrom: \"#8E241F\",\n    backgroundGradientTo: \"#8E241F\",\n    color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`, // Fixed template literal syntax\n    labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n    decimalPlaces: 2,\n};\n\n// **Goal Progress Chart Configuration (Custom Colors for Donut Chart)**\nconst goalChartConfig = {\n    backgroundGradientFrom: \"#8E241F\",\n    backgroundGradientTo: \"#8E241F\",\n    color: (opacity = 1) => `rgba(46, 204, 113, ${opacity})`,  // Fixed template literal syntax\n    labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n    strokeWidth: 16, \n    radius: 55,\n    backgroundColor: \"transparent\",\n    useShadowColorFromDataset: false,\n};\n\n// **Styles**\nconst styles = StyleSheet.create({\n    container: {\n        flexGrow: 1,\n        alignItems: 'center',\n        paddingVertical: 20,\n        backgroundColor: '#8E241F'\n    },\n    backButton: {\n        marginTop: 10,\n        padding: 8,\n        backgroundColor: \"#fff\",\n        borderRadius: 5,\n        alignSelf: \"center\",\n    },\n    backButtonText: {\n        color: \"#721E5E\",\n        fontWeight: \"bold\",\n    },\n    \n    totalSpendingContainer: {\n        backgroundColor: '#AE1C1A',\n        padding: 25,\n        borderRadius: 10,\n        marginBottom: 100,\n        width: '90%',\n        alignItems: 'center',\n    },\n    totalSpendingText: {\n        fontSize: 50,\n        fontWeight: 'bold',\n        color: '#fff',\n    },\n    totalSpendingTitle: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        color: '#fff',\n    },\n    pickerContainer: {\n        backgroundColor: '#fff',\n        borderRadius: 5,\n        width: '60%',\n        marginTop: 10,\n    },\n    picker: {\n        height: 40,\n        color: '#721E5E',\n    },\n    chartTitle: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        color: '#fff',\n        textAlign: 'center',\n        marginBottom: 10,\n    },\n    summaryContainer: {\n        marginTop: 80, \n        marginBottom: 50,\n        backgroundColor: '#fff',\n        padding: 10,\n        borderRadius: 10,\n        width: '90%',\n        alignItems: 'center',\n    },\n    summaryText: {\n        fontSize: 16,\n        fontWeight: 'bold',\n        color: '#721E5E',\n    },\n    chartsRow: {\n        flexDirection: 'row', \n        justifyContent: 'space-between',\n        alignItems: 'center',\n        width: '90%',\n    },\n    chartBox: {\n        backgroundColor: '#AE1C1A',\n        padding: 10,\n        borderRadius: 10,\n        alignItems: 'center',\n        width: '30%', \n    },\n    goalInfo: {\n        marginTop: 10,\n        padding: 10,\n        backgroundColor: \"#AE1C1A\",\n        borderRadius: 10,\n        width: \"100%\",\n        alignItems: \"center\",\n    },\n    goalText: {\n        fontSize: 16,\n        color: \"#333\",\n        marginVertical: 3,\n    },\n    \n    \n});\n\nexport default DashboardScreen;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}