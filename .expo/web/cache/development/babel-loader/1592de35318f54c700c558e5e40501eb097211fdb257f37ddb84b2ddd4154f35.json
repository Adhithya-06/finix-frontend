{"ast":null,"code":"\"use strict\";\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"onPress\", \"style\", \"accessibilityLabel\"];\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function Overlay(_ref) {\n  let {\n      open,\n      onPress,\n      style,\n      accessibilityLabel = 'Close drawer'\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  return _jsx(View, Object.assign({}, rest, {\n    style: [styles.overlay, {\n      opacity: open ? 1 : 0,\n      pointerEvents: open ? 'auto' : 'none'\n    }, style],\n    accessibilityElementsHidden: !open,\n    importantForAccessibility: open ? 'auto' : 'no-hide-descendants',\n    children: _jsx(Pressable, {\n      onPress: onPress,\n      style: [styles.pressable, {\n        pointerEvents: open ? 'auto' : 'none'\n      }],\n      accessibilityRole: \"button\",\n      accessibilityLabel: accessibilityLabel\n    })\n  }));\n}\nconst styles = StyleSheet.create({\n  overlay: Object.assign({}, StyleSheet.absoluteFillObject, {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    WebkitTapHighlightColor: 'transparent',\n    transition: 'opacity 0.3s'\n  }),\n  pressable: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["jsx","_jsx","Overlay","_ref","open","onPress","style","accessibilityLabel","rest","_objectWithoutPropertiesLoose","_excluded","View","Object","assign","styles","overlay","opacity","pointerEvents","accessibilityElementsHidden","importantForAccessibility","children","Pressable","pressable","accessibilityRole","StyleSheet","create","absoluteFillObject","backgroundColor","WebkitTapHighlightColor","transition","flex"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/react-native-drawer-layout/src/views/Overlay.tsx"],"sourcesContent":["import { Pressable, StyleSheet, View } from 'react-native';\n\nimport type { OverlayProps } from '../types';\n\nexport function Overlay({\n  open,\n  onPress,\n  style,\n  accessibilityLabel = 'Close drawer',\n  ...rest\n}: OverlayProps) {\n  return (\n    <View\n      {...rest}\n      style={[\n        styles.overlay,\n        { opacity: open ? 1 : 0, pointerEvents: open ? 'auto' : 'none' },\n        style,\n      ]}\n      accessibilityElementsHidden={!open}\n      importantForAccessibility={open ? 'auto' : 'no-hide-descendants'}\n    >\n      <Pressable\n        onPress={onPress}\n        style={[styles.pressable, { pointerEvents: open ? 'auto' : 'none' }]}\n        accessibilityRole=\"button\"\n        accessibilityLabel={accessibilityLabel}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    // @ts-expect-error: WebkitTapHighlightColor is web only\n    WebkitTapHighlightColor: 'transparent',\n    transition: 'opacity 0.3s',\n  },\n  pressable: {\n    flex: 1,\n  },\n});\n"],"mappings":";;;;;;;AAA2D,SAAAA,GAAA,IAAAC,IAAA;AAI3D,OAAO,SAASC,OAAOA,CAAAC,IAAA,EAMN;EAAA,IANO;MACtBC,IAAI;MACJC,OAAO;MACPC,KAAK;MACLC,kBAAkB,GAAG;IAET,CAAC,GAAAJ,IAAA;IADVK,IAAA,GAAAC,6BAAA,CAAAN,IAAA,EAAAO,SAAA;EAEH,OACET,IAAA,CAACU,IAAI,EAAAC,MAAA,CAAAC,MAAA,KACCL,IAAI;IACRF,KAAK,EAAE,CACLQ,MAAM,CAACC,OAAO,EACd;MAAEC,OAAO,EAAEZ,IAAI,GAAG,CAAC,GAAG,CAAC;MAAEa,aAAa,EAAEb,IAAI,GAAG,MAAM,GAAG;IAAO,CAAC,EAChEE,KAAK,CACL;IACFY,2BAA2B,EAAE,CAACd,IAAK;IACnCe,yBAAyB,EAAEf,IAAI,GAAG,MAAM,GAAG,qBAAsB;IAAAgB,QAAA,EAEjEnB,IAAA,CAACoB,SAAS;MACRhB,OAAO,EAAEA,OAAQ;MACjBC,KAAK,EAAE,CAACQ,MAAM,CAACQ,SAAS,EAAE;QAAEL,aAAa,EAAEb,IAAI,GAAG,MAAM,GAAG;MAAO,CAAC,CAAE;MACrEmB,iBAAiB,EAAC,QAAQ;MAC1BhB,kBAAkB,EAAEA;IAAmB,CACxC;EAAA,EACG,CAAC;AAEX;AAEA,MAAMO,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC/BV,OAAO,EAAAH,MAAA,CAAAC,MAAA,KACFW,UAAU,CAACE,kBAAkB;IAChCC,eAAe,EAAE,oBAAoB;IAIrCC,uBAAuB,EAAE,aAAa;IACtCC,UAAU,EAAE;EAAA,EACb;EACDP,SAAS,EAAE;IACTQ,IAAI,EAAE;EACR;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}