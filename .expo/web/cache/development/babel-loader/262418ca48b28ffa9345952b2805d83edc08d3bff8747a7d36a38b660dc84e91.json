{"ast":null,"code":"\"use strict\";\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"tintColor\", \"accessibilityLabel\"];\nimport { PlatformPressable } from '@react-navigation/elements';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport toggleDrawerIcon from './assets/toggle-drawer-icon.png';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function DrawerToggleButton(_ref) {\n  let {\n      tintColor,\n      accessibilityLabel = 'Show navigation menu'\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const navigation = useNavigation();\n  return _jsx(PlatformPressable, Object.assign({}, rest, {\n    accessibilityLabel: accessibilityLabel,\n    android_ripple: {\n      borderless: true\n    },\n    onPress: () => navigation.dispatch(DrawerActions.toggleDrawer()),\n    style: styles.touchable,\n    hitSlop: Platform.select({\n      ios: undefined,\n      default: {\n        top: 16,\n        right: 16,\n        bottom: 16,\n        left: 16\n      }\n    }),\n    children: _jsx(Image, {\n      resizeMode: \"contain\",\n      source: toggleDrawerIcon,\n      fadeDuration: 0,\n      tintColor: tintColor,\n      style: styles.icon\n    })\n  }));\n}\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    marginVertical: 8,\n    marginHorizontal: 13\n  },\n  touchable: {\n    borderRadius: 10\n  }\n});","map":{"version":3,"names":["PlatformPressable","DrawerActions","useNavigation","Image","Platform","StyleSheet","toggleDrawerIcon","jsx","_jsx","DrawerToggleButton","_ref","tintColor","accessibilityLabel","rest","_objectWithoutPropertiesLoose","_excluded","navigation","Object","assign","android_ripple","borderless","onPress","dispatch","toggleDrawer","style","styles","touchable","hitSlop","select","ios","undefined","default","top","right","bottom","left","children","resizeMode","source","fadeDuration","icon","create","height","width","marginVertical","marginHorizontal","borderRadius"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/node_modules/@react-navigation/drawer/src/views/DrawerToggleButton.tsx"],"sourcesContent":["import { PlatformPressable } from '@react-navigation/elements';\nimport {\n  DrawerActions,\n  type ParamListBase,\n  useNavigation,\n} from '@react-navigation/native';\nimport { Image, Platform, StyleSheet } from 'react-native';\n\nimport type { DrawerNavigationProp } from '../types';\nimport toggleDrawerIcon from './assets/toggle-drawer-icon.png';\n\ntype Props = {\n  accessibilityLabel?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  tintColor?: string;\n};\n\nexport function DrawerToggleButton({\n  tintColor,\n  accessibilityLabel = 'Show navigation menu',\n  ...rest\n}: Props) {\n  const navigation = useNavigation<DrawerNavigationProp<ParamListBase>>();\n\n  return (\n    <PlatformPressable\n      {...rest}\n      accessibilityLabel={accessibilityLabel}\n      android_ripple={{ borderless: true }}\n      onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n      style={styles.touchable}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n    >\n      <Image\n        resizeMode=\"contain\"\n        source={toggleDrawerIcon}\n        fadeDuration={0}\n        tintColor={tintColor}\n        style={styles.icon}\n      />\n    </PlatformPressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    marginVertical: 8,\n    marginHorizontal: 13,\n  },\n  touchable: {\n    // Roundness for iPad hover effect\n    borderRadius: 10,\n  },\n});\n"],"mappings":";;;;AAAA,SAASA,iBAAiB,QAAQ,4BAA4B;AAC9D,SACEC,aAAa,EAEbC,aAAa,QACR,0BAA0B;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAIjC,OAAOC,gBAAgB,MAAM,iCAAiC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAS/D,OAAO,SAASC,kBAAkBA,CAAAC,IAAA,EAIxB;EAAA,IAJyB;MACjCC,SAAS;MACTC,kBAAkB,GAAG;IAEhB,CAAC,GAAAF,IAAA;IADHG,IAAA,GAAAC,6BAAA,CAAAJ,IAAA,EAAAK,SAAA;EAEH,MAAMC,UAAU,GAAGd,aAAa,CAAsC,CAAC;EAEvE,OACEM,IAAA,CAACR,iBAAiB,EAAAiB,MAAA,CAAAC,MAAA,KACZL,IAAI;IACRD,kBAAkB,EAAEA,kBAAmB;IACvCO,cAAc,EAAE;MAAEC,UAAU,EAAE;IAAK,CAAE;IACrCC,OAAO,EAAEA,CAAA,KAAML,UAAU,CAACM,QAAQ,CAACrB,aAAa,CAACsB,YAAY,CAAC,CAAC,CAAE;IACjEC,KAAK,EAAEC,MAAM,CAACC,SAAU;IACxBC,OAAO,EAAEvB,QAAQ,CAACwB,MAAM,CAAC;MACvBC,GAAG,EAAEC,SAAS;MACdC,OAAO,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG;IACtD,CAAC,CAAE;IAAAC,QAAA,EAEH5B,IAAA,CAACL,KAAK;MACJkC,UAAU,EAAC,SAAS;MACpBC,MAAM,EAAEhC,gBAAiB;MACzBiC,YAAY,EAAE,CAAE;MAChB5B,SAAS,EAAEA,SAAU;MACrBa,KAAK,EAAEC,MAAM,CAACe;IAAK,CACpB;EAAA,EACgB,CAAC;AAExB;AAEA,MAAMf,MAAM,GAAGpB,UAAU,CAACoC,MAAM,CAAC;EAC/BD,IAAI,EAAE;IACJE,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,cAAc,EAAE,CAAC;IACjBC,gBAAgB,EAAE;EACpB,CAAC;EACDnB,SAAS,EAAE;IAEToB,YAAY,EAAE;EAChB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}