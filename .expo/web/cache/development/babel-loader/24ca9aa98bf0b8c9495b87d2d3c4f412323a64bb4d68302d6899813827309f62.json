{"ast":null,"code":"var _jsxFileName = \"/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/context/TransactionContext.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionContext = createContext();\nexport const TransactionProvider = ({\n  children\n}) => {\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    const loadTransactions = async () => {\n      try {\n        const storedTransactions = await AsyncStorage.getItem(\"transactions\");\n        if (storedTransactions) {\n          setTransactions(JSON.parse(storedTransactions));\n        }\n      } catch (error) {\n        console.error(\"Error loading transactions:\", error);\n      }\n    };\n    loadTransactions();\n  }, []);\n  useEffect(() => {\n    const saveTransactions = async () => {\n      try {\n        await AsyncStorage.setItem(\"transactions\", JSON.stringify(transactions));\n      } catch (error) {\n        console.error(\"Error saving transactions:\", error);\n      }\n    };\n    saveTransactions();\n  }, [transactions]);\n  const addTransaction = newTransaction => {\n    setTransactions(prevTransactions => [...prevTransactions, newTransaction]);\n  };\n  return _jsxDEV(TransactionContext.Provider, {\n    value: {\n      transactions,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","AsyncStorage","jsxDEV","_jsxDEV","TransactionContext","TransactionProvider","children","transactions","setTransactions","loadTransactions","storedTransactions","getItem","JSON","parse","error","console","saveTransactions","setItem","stringify","addTransaction","newTransaction","prevTransactions","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/adhithyasobhanan/MY FINIX-APP/FRONTEND/context/TransactionContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nexport const TransactionContext = createContext();\n\nexport const TransactionProvider = ({ children }) => {\n  const [transactions, setTransactions] = useState([]);\n\n  //  Load Transactions from AsyncStorage (persistent storage)\n  useEffect(() => {\n    const loadTransactions = async () => {\n      try {\n        const storedTransactions = await AsyncStorage.getItem(\"transactions\");\n        if (storedTransactions) {\n          setTransactions(JSON.parse(storedTransactions));\n        }\n      } catch (error) {\n        console.error(\"Error loading transactions:\", error);\n      }\n    };\n    loadTransactions();\n  }, []);\n\n  //  Save Transactions to AsyncStorage whenever they change\n  useEffect(() => {\n    const saveTransactions = async () => {\n      try {\n        await AsyncStorage.setItem(\"transactions\", JSON.stringify(transactions));\n      } catch (error) {\n        console.error(\"Error saving transactions:\", error);\n      }\n    };\n    saveTransactions();\n  }, [transactions]);\n\n  // Function to add a new transaction\n  const addTransaction = (newTransaction) => {\n    setTransactions((prevTransactions) => [...prevTransactions, newTransaction]);\n  };\n\n  return (\n    <TransactionContext.Provider value={{ transactions, addTransaction }}>\n      {children}\n    </TransactionContext.Provider>\n  );\n};\n\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErE,OAAO,MAAMC,kBAAkB,GAAGN,aAAa,CAAC,CAAC;AAEjD,OAAO,MAAMO,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACnD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAGpDC,SAAS,CAAC,MAAM;IACd,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,kBAAkB,GAAG,MAAMT,YAAY,CAACU,OAAO,CAAC,cAAc,CAAC;QACrE,IAAID,kBAAkB,EAAE;UACtBF,eAAe,CAACI,IAAI,CAACC,KAAK,CAACH,kBAAkB,CAAC,CAAC;QACjD;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDL,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAGNT,SAAS,CAAC,MAAM;IACd,MAAMgB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMf,YAAY,CAACgB,OAAO,CAAC,cAAc,EAAEL,IAAI,CAACM,SAAS,CAACX,YAAY,CAAC,CAAC;MAC1E,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDE,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,CAACT,YAAY,CAAC,CAAC;EAGlB,MAAMY,cAAc,GAAIC,cAAc,IAAK;IACzCZ,eAAe,CAAEa,gBAAgB,IAAK,CAAC,GAAGA,gBAAgB,EAAED,cAAc,CAAC,CAAC;EAC9E,CAAC;EAED,OACEjB,OAAA,CAACC,kBAAkB,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,YAAY;MAAEY;IAAe,CAAE;IAAAb,QAAA,EAClEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAElC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}